import{ge as u,gl as c,bO as b,s as y,ay as S,bN as C,ax as w,eU as $,az as M,bP as I,bM as h,aA as x,gm as k,gn as D,ca as L,go as p}from"./index-CaoLwbR1.js";import{D as v,L as F}from"./defaults3D-ivya3xoE.js";const f="#useCIMFallbackSymbology()",a={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function U(e,l=a){if(!e)return{symbol:null};const{retainId:r=a.retainId,ignoreDrivers:o=a.ignoreDrivers,hasLabelingContext:s=a.hasLabelingContext,retainCIM:i=a.retainCIM,cimFallbackEnabled:t=a.cimFallbackEnabled}=l;let n=null;if(u(e)||e instanceof c)n=e.clone();else if(e.type==="cim"){const m=e.data?.symbol?.type;switch(m){case"CIMPointSymbol":n=i?e.clone():b.fromCIMSymbol(e);break;case"CIMLineSymbol":t&&(n=F.clone(),l?.logWarning?.(f,"Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":t&&(n=v.clone(),l?.logWarning?.(f,"Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!n)return{error:new y("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${m||"unknown"}' is unsupported in 3D`,{symbol:e})}}else if(e instanceof S)n=C.fromSimpleLineSymbol(e);else if(e instanceof w)n=b.fromSimpleMarkerSymbol(e);else if(e instanceof $)n=b.fromPictureMarkerSymbol(e);else if(e instanceof M)n=l.geometryType&&l.geometryType==="mesh"?I.fromSimpleFillSymbol(e):h.fromSimpleFillSymbol(e);else{if(!(e instanceof x))return{error:new y("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};n=s?k.fromTextSymbol(e):b.fromTextSymbol(e)}return r&&n&&n.type!=="cim"&&(n.id=e.id),!o||n.type==="cim"||n instanceof c||n.symbolLayers.forEach((m=>m.ignoreDrivers=!0)),{symbol:n}}function E(e,l,r,o){const s=d(e,{},{context:o,isLabelSymbol:!1});s!=null&&L(r,s,l)}function W(e,l,r,o){const s=d(e,{},{context:o,isLabelSymbol:!0});s!=null&&(l[r]=s)}function g(e){return u(e)||e instanceof c}function P(e){return e?.type==="polygon-3d"||e?.type==="line-3d"}function d(e,l,r){if(e==null)return null;const{context:o,isLabelSymbol:s}=r,i=o?.origin,t=o?.messages;if(i==="web-scene"&&!g(e)){const n=U(e,{retainCIM:!0,hasLabelingContext:s});return n.symbol!=null?n.symbol.write(l,o):(t?.push(new y("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:o,error:n.error})),null)}return p(o?.layer)&&P(e)?(t?.push(new y("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported on layers of type '${o?.layer?.declaredClass}'.`,{symbol:e,context:o})),null):(i==="web-map"||i==="portal-item"&&!p(o?.layer))&&g(e)?(t?.push(new y("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:o})),null):e.write(l,o)}function V(e,l){return D(e,null,l)}export{U as a,a as g,E as i,W as p,V as u};
