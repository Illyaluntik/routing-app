import{ed as O,e3 as R,dA as L,e2 as B,dZ as E,d$ as d,eM as T,gQ as b,kh as p}from"./index-B8xXt3oP.js";import{m as U,B as I,e as V,f as C,a as w,C as M,s as A}from"./dehydratedFeatureUtils-Cy96R2NO.js";import{i as P,y as W}from"./memoryEstimations-DY00BK4o.js";import{E as l,i as D}from"./IntersectorType-gQim6TH1.js";import{e as N,r as _}from"./mat4f64-q_b6UJoq.js";import{z as J}from"./vec42-B8V8Ss_9.js";import{n as j}from"./vec4f64-DPb6J-GU.js";import{b as k,v as x}from"./sphere-B9LU4qlp.js";import{e as z}from"./VertexAttribute-BfkzOMLV.js";class Q{get ray(){return this._ray}get distanceInRenderSpace(){return this.distance==null?null:(R(f,this.ray.direction,this.distance),O(f))}withinDistance(e){return!!G(this)&&this.distanceInRenderSpace<=e}getIntersectionPoint(e){return!!G(this)&&(R(f,this.ray.direction,this.distance),B(e,this.ray.origin,f),!0)}getTransformedNormal(e){return d(h,this.normal),h[3]=0,J(h,h,this.transformation),d(e,h),E(e,e)}constructor(e){this.intersector=l.OBJECT,this.normal=L(),this.transformation=N(),this._ray=k(),this.init(e)}init(e){this.distance=this.target=this.drapedLayerOrder=this.renderPriority=null,this.intersector=l.OBJECT,x(e,this._ray)}set(e,r,t,i,s,a,o){this.intersector=e,this.distance=t,d(this.normal,i??T),b(this.transformation,s??_),this.target=r,this.drapedLayerOrder=a,this.renderPriority=o}copy(e){x(e.ray,this._ray),this.intersector=e.intersector,this.distance=e.distance,this.target=e.target,this.drapedLayerOrder=e.drapedLayerOrder,this.renderPriority=e.renderPriority,d(this.normal,e.normal),b(this.transformation,e.transformation)}}function G(n){return n?.distance!=null}const f=L(),h=j();let Z=class{constructor(e){this.layerViewUid=e}};class q extends Z{constructor(e,r){super(e),this.graphicUid=r}}class F extends q{constructor(e,r,t,i,s){super(e,r),this.layerViewUid=e,this.graphicUid=r,this.triangleNr=t,this.baseBoundingSphere=i,this.numLodLevels=s}}let H=class{constructor(e,r,t,i){this.material=e,this.bufferWriter=e.createBufferWriter(),this.vertexBufferLayout=this.bufferWriter.vertexBufferLayout,this.buffer=r,this.elementCount=t,this.boundingInfo=i}get numTriangles(){return this.elementCount/3}get numVertices(){return this.elementCount}computeUsedMemory(){return this.buffer.byteLength+W}getRenderGeometry(){return this}intersect(e,r,t,i,s,a,o,c){const u=this.bufferWriter,m=this.buffer;u.intersect(m,this.material.parameters,null,e,t,i,((g,y,$)=>v(g,y,$,e,r,a,o,s,c)))}};class K{constructor(e){this.engineGeometry=e}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.attributes.get(z.POSITION).indices.length}get numTriangles(){return this.engineGeometry.indexCount/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce(((e,r)=>e+P(r.data,r.indices)),0)}getRenderGeometry(){const e=this.material,r=this.engineGeometry,t=r.attributes,i=r.boundingInfo,s=e.createBufferWriter(),a=s.vertexBufferLayout,o=s.elementCount(t),c=a.createBuffer(o);return s.write(null,null,t,null,c,0),new H(e,c.buffer,o,i)}intersect(e,r,t,i,s,a,o,c){const u=this.engineGeometry;this.material.intersect(u,e.transform.transform,e,t,i,((m,g,y)=>v(m,g,y,e,r,a,o,s,c)))}}function v(n,e,r,t,i,s,a,o,c){if(n<0||i&&!i(t.rayBegin,t.rayEnd,n))return;const u=new F(s.layerViewUid,s.graphicUid(o),r,a,c);if((t.results.min.distance==null||n<t.results.min.distance)&&t.results.min.set(l.LOD,u,n,e,t.transform.transform),(t.results.max.distance==null||n>t.results.max.distance)&&t.results.max.set(l.LOD,u,n,e,t.transform.transform),t.options.store===D.ALL){const m=new Q(t.results.min.ray);m.set(l.LOD,u,n,e,t.transform.transform),t.results.all.push(m)}}let X=class{constructor(e,r=null){this.geometry=e,this.textures=r}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}};class Y{constructor(e,r,t){this.components=e,this.minScreenSpaceRadius=r,this.pivotOffset=t;const i=p(this.components.map((s=>s.geometry)));this.numVertices=i.reduce(((s,a)=>s+a.numVertices),0)}}class ee{constructor(e){this.levels=e,this.levels.sort(((r,t)=>r.minScreenSpaceRadius===t.minScreenSpaceRadius?r.numVertices-t.numVertices:r.minScreenSpaceRadius-t.minScreenSpaceRadius))}getMaterials(){const e=[];return this.levels.forEach((r=>r.components.forEach((t=>e.push(t.geometry.material))))),p(e)}getTextures(){const e=new Array;return this.levels.forEach((r=>r.components.forEach((t=>{t.textures!=null&&e.push(...t.textures)})))),p(e)}getGeometries(){const e=new Array;return this.levels.forEach((r=>r.components.forEach((t=>{e.push(t.geometry)})))),p(e)}getEngineGeometries(){return this.getGeometries().map((e=>e.engineGeometry)).filter((e=>e!=null))}computeUsedMemory(){const e=this.getGeometries(),r=this.getTextures(),t=e.reduce(((i,s)=>i+s.computeUsedMemory()),0);return r.reduce(((i,s)=>i+s.usedMemory),0)+t}}function de(n){switch(n){case"sphere":case"cube":case"diamond":case"cylinder":case"cone":case"inverted-cone":case"tetrahedron":return!0}return!1}function fe(n,e){const r=(t,i,s=!1)=>new ee(t.map((a=>{const o=i(a.tesselation);return s&&U(o),new Y([new X(new K(o))],a.minScreenSpaceRadius)})));switch(n){case"sphere":return r([{tesselation:0,minScreenSpaceRadius:0},{tesselation:1,minScreenSpaceRadius:8},{tesselation:2,minScreenSpaceRadius:16},{tesselation:3,minScreenSpaceRadius:50},{tesselation:4,minScreenSpaceRadius:250}],(t=>A(e,.5,t)));case"cube":return r([{tesselation:0,minScreenSpaceRadius:0}],(()=>M(e,1)));case"cone":return r(S,(t=>w(e,1,.5,t,!1)),!0);case"inverted-cone":return r(S,(t=>w(e,1,.5,t,!0)),!0);case"cylinder":return r(S,(t=>C(e,1,.5,t,[0,0,1],[0,0,.5])));case"tetrahedron":return r([{tesselation:0,minScreenSpaceRadius:0}],(()=>V(e,1)),!0);case"diamond":return r([{tesselation:0,minScreenSpaceRadius:0}],(()=>I(e,1)),!0);default:return}}const S=[{tesselation:6,minScreenSpaceRadius:0},{tesselation:18,minScreenSpaceRadius:7},{tesselation:64,minScreenSpaceRadius:65}];export{de as S,X as a,K as b,Y as f,ee as h,fe as l,Q as p};
