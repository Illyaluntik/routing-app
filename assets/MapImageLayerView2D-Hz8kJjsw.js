import{n as r,u as s,v as n,c as l,l as d,i as u,w as c,f as m,j as y}from"./index-B8xXt3oP.js";import{r as f}from"./BitmapContainer-DSQgFkp3.js";import{S as _,u as x}from"./LayerView-Dhjf0-qm.js";import{O as H}from"./GraphicsView2D-DPY4RrOT.js";import{a as w}from"./HighlightGraphicContainer-D5puf_XY.js";import{M as v}from"./ExportStrategy--F87r73M.js";import{y as I}from"./ExportImageParameters-BJxp0k13.js";import{i as $}from"./timeSupport-CtEwpnCr.js";import{i as P}from"./RefreshableLayerView-CL-ncZoP.js";import{P as V,i as E}from"./MapServiceLayerViewHelper-DUWTwMha.js";import{r as G}from"./drapedUtils-NlMURLG9.js";import"./WGLContainer-B4lMw9sd.js";import"./Utils-D5owpkbc.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-I_4uhNUP.js";import"./memoryEstimations-DY00BK4o.js";import"./vec3f32-WCVSSNPR.js";import"./Container-C__vYOfg.js";import"./StyleDefinition-H2dD46QT.js";import"./enums-Da5QEGm1.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DXDLMTBw.js";import"./OptimizedFeature-UgFrRqcY.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./BitmapTechnique-DC5BT-5U.js";import"./GraphShaderModule-DS_7kDvA.js";import"./FramebufferObject-SQ5ZqeLE.js";import"./ShaderBuilder-D78yHDdB.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-pk2C5RYg.js";import"./bitmapUtils-QNnY2suj.js";import"./layerViewUtils-CLcZWAE6.js";import"./FieldsIndex-DRgmiPRe.js";import"./UnknownTimeZone-BROmPhr1.js";import"./UpdateTracking2D-CV4lUU1P.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-D5kALkvP.js";import"./utils-vSs1juDA.js";import"./defaultCIMValues-B0_T2GCo.js";import"./rasterizingUtils-D9iEM4s9.js";import"./floatRGBA-BZzk8Nrj.js";import"./Rect-CUzevAry.js";import"./defaults-Cc8aB_4Q.js";import"./defaultsJSON-GKolV7NZ.js";import"./OverrideHelper-CaJ2cYAx.js";import"./colorUtils-CnDnniBE.js";import"./vec42-B8V8Ss_9.js";import"./vec4f64-DPb6J-GU.js";import"./ArcadeExpression-B4nQQTbb.js";import"./TimeOnly-D91NAFNv.js";import"./enum-B2GTxHxe.js";import"./quantizationUtils-NZeoNVDs.js";import"./AttributeStore-DAh67KZE.js";import"./labelUtils-BuZC9Yns.js";import"./diffUtils-DufdeOAi.js";import"./constants-BFLErLYb.js";import"./queryUtils-BTakVHbq.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DBUrhqEx.js";import"./FeatureCommandQueue-CeQGVQvd.js";import"./utils-CSMZGcLS.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-Cgsvir5y.js";import"./normalizeUtilsSync-DtGZ_HDl.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-C80wcmal.js";import"./AGraphicContainer-CN8A2sIs.js";import"./TechniqueInstance-DDOLOXhL.js";import"./TileContainer-Dd5YFy0t.js";import"./scaleUtils-DzXGpvik.js";import"./floorFilterUtils-n6UOt7ty.js";import"./sublayerUtils-BbnY2ndJ.js";import"./popupUtils-5kp4zSNV.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new I({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return r([s()],i.prototype,"exportImageParameters",void 0),r([s({readOnly:!0})],i.prototype,"floors",null),r([s({readOnly:!0})],i.prototype,"exportImageVersion",null),r([s()],i.prototype,"layer",void 0),r([s()],i.prototype,"suspended",void 0),r([s({readOnly:!0})],i.prototype,"timeExtent",null),i=r([n("esri.views.layers.MapImageLayerView")],i),i};let p=class extends U(P(_(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch((e=>{d(e)||u.getLogger(this).error(e)})),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,o=e>=10.3,g=e>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(a,h)=>G(a,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:a,property:h})=>this._highlightView.graphicUpdateHandler({graphic:a,property:h}),layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:o,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(c((()=>this.exportImageVersion),(()=>this.requestUpdate()))),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,o){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,i,e,o){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t,i){const e=E(t);if(e.length===0)return m();const o=i?.name??y;return this._addHighlightGraphics(e,o),m((()=>!this.destroyed&&this._removeHighlightGraphics(e,o)))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map((e=>e.uid)),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map((e=>e.uid)),i)}};r([s()],p.prototype,"strategy",void 0),r([s()],p.prototype,"updating",void 0),p=r([n("esri.views.2d.layers.MapImageLayerView2D")],p);const Kt=p;export{Kt as default};
