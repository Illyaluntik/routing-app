const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/disjointOperator-Ck5T2Tg5.js","assets/ProjectionTransformation-Bb6A26MA.js","assets/Envelope2D-BMtfOHN9.js","assets/Point2D-CD2RJRJ9.js","assets/Transformation2D-Cvw8Af54.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-Dew1EvIF.js","assets/index-UDJfKx5H.css","assets/OperatorDefinitions-DP7_WWTp.js","assets/jsonConverter-CPmEBvl_.js","assets/intersectsOperator-CWWc7sYS.js","assets/OperatorIntersects-B781KbUm.js","assets/touchesOperator-CWhF3Br-.js","assets/OperatorTouches-C-QVB6ED.js","assets/crossesOperator-Dt6BYGuK.js","assets/OperatorCrosses-f7z_farz.js","assets/withinOperator-DBBPZqWO.js","assets/OperatorWithin-C_dA6x7L.js","assets/containsOperator-yy60g1eY.js","assets/overlapsOperator-DC98Z5gG.js","assets/OperatorOverlaps-D8JOVdX4.js","assets/equalsOperator-8PWD0_GW.js","assets/apiConverter-CAEZgwbD.js","assets/relateOperator-QFnZhRam.js","assets/intersectionOperator-dalhrwEu.js","assets/operatorIntersection-B8WenyWS.js","assets/unionOperator-CSV9hQmE.js","assets/operatorUnion-D2pPef6P.js","assets/differenceOperator-DEUhBaj2.js","assets/symmetricDifferenceOperator-CX8lFsKI.js","assets/clipOperator-C7CjMToa.js","assets/cutOperator-CsCuSMeX.js","assets/areaOperator-CM55cCqu.js","assets/unitConversion-BDy1yL11.js","assets/enum-B0n7OVsN.js","assets/geodeticAreaOperator-DQekjAI9.js","assets/geodeticCurveType-CirnHLSB.js","assets/lengthOperator-DD7J0YsC.js","assets/geodeticLengthOperator-DnUbQ8Ur.js","assets/distanceOperator-DcCk1n78.js","assets/densifyOperator-BtOMPiEA.js","assets/geodeticDensifyOperator-D4y_aqIA.js","assets/operatorGeodeticDensify-CHjX2qUQ.js","assets/generalizeOperator-BviaIlVz.js","assets/OperatorGeneralize-BMbKV3rJ.js","assets/bufferOperator-CRb2AP8T.js","assets/operatorBuffer-DoAueeT4.js","assets/GeometryCleaner-BEJM7I4l-DSNSBFki.js","assets/OperatorSimplifyOGC-C3I1PCxp.js","assets/geodesicBufferOperator-BAko6kXY.js","assets/operatorGeodesicBuffer-BJU8C8Cg.js","assets/offsetOperator-BDfBJNor.js","assets/operatorOffset-8AWQezMy.js","assets/affineTransformOperator-D_g3cPOA.js","assets/Transformation-DkXd880B.js","assets/centroidOperator-CF_IfOL8.js","assets/Centroid-DZi-eb9F-BPSXJUJR.js","assets/labelPointOperator-CcEEZbyU.js","assets/OperatorProximity-CMRNqHht.js","assets/simplifyOperator-CgE17TR_.js","assets/operatorSimplify-D5KU1UwP.js","assets/simplifyOGCOperator-8YwXxs_1.js","assets/convexHullOperator-kDobFQZR.js","assets/operatorConvexHull-D5JCgCld.js","assets/proximityOperator-Cd1hZrYA.js"])))=>i.map(i=>d[i]);
import{_ as i,aR as c}from"./index-Dew1EvIF.js";function _(t,e){let o;return{loaded:!1,load:()=>o??=e().then((n=>{E[t]={loaded:!0,execute:n}}))}}function u(t){return t==null?null:t.toJSON()}const E={disjoint:_("disjoint",(()=>i(()=>import("./disjointOperator-Ck5T2Tg5.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),intersects:_("intersects",(()=>i(()=>import("./intersectsOperator-CWWc7sYS.js"),__vite__mapDeps([10,11,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),touches:_("touches",(()=>i(()=>import("./touchesOperator-CWhF3Br-.js"),__vite__mapDeps([12,13,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),crosses:_("crosses",(()=>i(()=>import("./crossesOperator-Dt6BYGuK.js"),__vite__mapDeps([14,15,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),within:_("within",(()=>i(()=>import("./withinOperator-DBBPZqWO.js"),__vite__mapDeps([16,17,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),contains:_("contains",(()=>i(()=>import("./containsOperator-yy60g1eY.js"),__vite__mapDeps([18,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),overlaps:_("overlaps",(()=>i(()=>import("./overlapsOperator-DC98Z5gG.js"),__vite__mapDeps([19,20,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),equals:_("equals",(async()=>{const t=await i(()=>import("./equalsOperator-8PWD0_GW.js").then(e=>e.e),__vite__mapDeps([21,1,2,3,4,5,6,7,8,22,9]));return(e,o)=>t.execute(c(e),c(o))})),relate:_("relate",(async()=>{const t=await i(()=>import("./relateOperator-QFnZhRam.js").then(e=>e.r),__vite__mapDeps([23,1,2,3,4,5,6,7,8,22,9]));return(e,o,n)=>t.execute(c(e),c(o),n)})),intersection:_("intersection",(()=>i(()=>import("./intersectionOperator-dalhrwEu.js"),__vite__mapDeps([24,6,7,25,5,3,1,2,4,8,9])).then((t=>t.execute)))),union:_("union",(()=>i(()=>import("./unionOperator-CSV9hQmE.js"),__vite__mapDeps([26,27,5,3,1,2,4,6,7,8,9])).then((t=>t.executeMany)))),difference:_("difference",(async()=>{const t=await i(()=>import("./differenceOperator-DEUhBaj2.js").then(e=>e.d),__vite__mapDeps([28,3,1,2,4,5,6,7,8,9,22]));return(e,o)=>u(t.execute(c(e),c(o)))})),symmetricDifference:_("symmetricDifference",(async()=>{const t=await i(()=>import("./symmetricDifferenceOperator-CX8lFsKI.js").then(e=>e.s),__vite__mapDeps([29,6,7,3,1,2,4,5,8,9,22]));return(e,o)=>u(t.execute(c(e),c(o)))})),clip:_("clip",(async()=>{const t=await i(()=>import("./clipOperator-C7CjMToa.js").then(e=>e.c),__vite__mapDeps([30,3,1,2,4,5,6,7,8,9,22]));return(e,o)=>u(t.execute(c(e),c(o)))})),cut:_("cut",(async()=>{const t=await i(()=>import("./cutOperator-CsCuSMeX.js").then(e=>e.c),__vite__mapDeps([31,6,7,3,1,2,4,5,8,9,22]));return(e,o)=>t.execute(c(e),c(o)).map((n=>u(n)))})),area:_("area",(async()=>{const t=await i(()=>import("./areaOperator-CM55cCqu.js").then(n=>n.a),__vite__mapDeps([32,6,7,3,2,1,4,5,8,9,22])),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:n,toAreaUnit:r}=await import("./unitConversion-BDy1yL11.js");return{convertFromSpatialReferenceUnit:n,toAreaUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r)=>{const a=t.execute(c(n));return e(n.spatialReference,o(r),a)}})),geodeticArea:_("geodeticArea",(async()=>{const t=await i(()=>import("./geodeticAreaOperator-DQekjAI9.js").then(r=>r.g),__vite__mapDeps([35,6,7,36])),{convert:e,squareMeters:o,toAreaUnit:n}=await i(async()=>{const{convert:r,squareMeters:a,toAreaUnit:s}=await import("./unitConversion-BDy1yL11.js");return{convert:r,squareMeters:a,toAreaUnit:s}},__vite__mapDeps([33,34,6,7]));return await t.load(),(r,a,s)=>{const p=t.execute(c(r),{curveType:s});return e(o,n(a),p)}})),length:_("length",(async()=>{const t=await i(()=>import("./lengthOperator-DD7J0YsC.js"),__vite__mapDeps([37,6,7,9,3,1,2,4,5,8])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BDy1yL11.js");return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r)=>{const a=t.execute(n);return e(n.spatialReference,o(r),a)}})),geodeticLength:_("geodeticLength",(async()=>{const t=await i(()=>import("./geodeticLengthOperator-DnUbQ8Ur.js").then(r=>r.g),__vite__mapDeps([38,6,7,36])),{convert:e,meters:o,toLengthUnit:n}=await i(async()=>{const{convert:r,meters:a,toLengthUnit:s}=await import("./unitConversion-BDy1yL11.js");return{convert:r,meters:a,toLengthUnit:s}},__vite__mapDeps([33,34,6,7]));return await t.load(),(r,a,s)=>{const p=t.execute(c(r),{curveType:s});return e(o,n(a),p)}})),distance:_("distance",(async()=>{const t=await i(()=>import("./distanceOperator-DcCk1n78.js").then(n=>n.d),__vite__mapDeps([39,3,6,7,1,2,4,5,8,22,9])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BDy1yL11.js");return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a)=>{const s=t.execute(c(n),c(r));return e(n.spatialReference,o(a),s)}})),densify:_("densify",(async()=>{const t=await i(()=>import("./densifyOperator-BtOMPiEA.js").then(n=>n.d),__vite__mapDeps([40,6,7,3,1,2,4,5,8,9,22])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BDy1yL11.js");return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a)=>(r=e(o(a),n.spatialReference,r),u(t.execute(c(n),r)))})),geodeticDensify:_("geodeticDensify",(async()=>{const t=await i(()=>import("./geodeticDensifyOperator-D4y_aqIA.js").then(r=>r.a),__vite__mapDeps([41,6,7,42,5,36])),{convert:e,meters:o,toLengthUnit:n}=await i(async()=>{const{convert:r,meters:a,toLengthUnit:s}=await import("./unitConversion-BDy1yL11.js");return{convert:r,meters:a,toLengthUnit:s}},__vite__mapDeps([33,34,6,7]));return await t.load(),(r,a,s,p)=>(a=e(n(s),o,a),u(t.execute(c(r),a,{curveType:p})))})),generalize:_("generalize",(async()=>{const t=await i(()=>import("./generalizeOperator-BviaIlVz.js").then(n=>n.g),__vite__mapDeps([43,6,7,3,1,2,4,5,8,9,44,22])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BDy1yL11.js");return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a,s)=>(r=e(o(a),n.spatialReference,r),u(t.execute(c(n),r,s)))})),buffer:_("buffer",(async()=>{const t=await i(()=>import("./bufferOperator-CRb2AP8T.js"),__vite__mapDeps([45,6,7,46,5,3,1,2,4,8,47,48,44,9])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BDy1yL11.js");return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a)=>(r=e(o(a),n.spatialReference,r),t.execute(n,r))})),geodesicBuffer:_("geodesicBuffer",(async()=>{const t=await i(()=>import("./geodesicBufferOperator-BAko6kXY.js"),__vite__mapDeps([49,6,7,50,5,36])),{convert:e,meters:o,toLengthUnit:n}=await i(async()=>{const{convert:r,meters:a,toLengthUnit:s}=await import("./unitConversion-BDy1yL11.js");return{convert:r,meters:a,toLengthUnit:s}},__vite__mapDeps([33,34,6,7]));return await t.load(),(r,a,s,p)=>(a=e(n(s),o,a),t.execute(r,a,{curveType:p}))})),offset:_("offset",(async()=>{const t=await i(()=>import("./offsetOperator-BDfBJNor.js"),__vite__mapDeps([51,6,7,52,5,1,2,3,4,8,9])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BDy1yL11.js");return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a,s)=>(r=e(o(a),n.spatialReference,r),t.execute(n,r,s))})),rotate:_("rotate",(async()=>{const t=await i(()=>import("./affineTransformOperator-D_g3cPOA.js"),__vite__mapDeps([53,6,7,5,3,22,2,1,4,8,9])),{default:e}=await i(async()=>{const{default:o}=await import("./Transformation-DkXd880B.js");return{default:o}},__vite__mapDeps([54,3,4,6,7]));return(o,n,r,a)=>{const s=new e().rotate(n,r,a);return u(t.execute(c(o),s))}})),centroid:_("centroid",(async()=>{const t=await i(()=>import("./centroidOperator-CF_IfOL8.js").then(e=>e.c),__vite__mapDeps([55,56,3,22,2,1,4,5,6,7,8,9]));return e=>u(t.execute(c(e)))})),labelPoint:_("labelPoint",(async()=>{const t=await i(()=>import("./labelPointOperator-CcEEZbyU.js").then(e=>e.l),__vite__mapDeps([57,3,1,2,4,5,6,7,8,9,56,58,22]));return e=>u(t.execute(c(e)))})),simplify:_("simplify",(()=>i(()=>import("./simplifyOperator-CgE17TR_.js"),__vite__mapDeps([59,60,5,3,1,2,4,6,7,8,9])).then((t=>t.execute)))),isSelfIntersecting:_("isSelfIntersecting",(async()=>{const{NonSimpleResult:t}=await i(()=>import("./OperatorDefinitions-DP7_WWTp.js"),[]),e=await i(()=>import("./simplifyOGCOperator-8YwXxs_1.js"),__vite__mapDeps([61,5,48,3,1,2,4,6,7,8,22,9])),o=new Set([5,6,7,10,11,12]);return n=>{const r=new t;return!e.isSimple(c(n),r)&&o.has(r.m_reason)}})),isSimple:_("isSimple",(()=>i(()=>import("./simplifyOperator-CgE17TR_.js"),__vite__mapDeps([59,60,5,3,1,2,4,6,7,8,9])).then((t=>t.isSimple)))),convexHull:_("convexHull",(()=>i(()=>import("./convexHullOperator-kDobFQZR.js"),__vite__mapDeps([62,63,5,3,1,2,4,6,7,8,9])).then((t=>t.execute)))),getNearestCoordinate:_("getNearestCoordinate",(async()=>{const t=await i(()=>import("./proximityOperator-Cd1hZrYA.js").then(e=>e.p),__vite__mapDeps([64,3,2,1,4,5,6,7,8,9,58,22]));return(e,o,n)=>{const r=t.getNearestCoordinate(c(e),c(o),n);return{...r,coordinate:u(r.coordinate)}}})),getNearestVertex:_("getNearestVertex",(async()=>{const t=await i(()=>import("./proximityOperator-Cd1hZrYA.js").then(e=>e.p),__vite__mapDeps([64,3,2,1,4,5,6,7,8,9,58,22]));return(e,o)=>{const n=t.getNearestVertex(c(e),c(o));return{...n,coordinate:u(n.coordinate)}}}))};function d(t,e){const o=E[t];return o.loaded?o.execute.apply(void 0,e):o.load().then((()=>d(t,e)))}export{d as invokeGeometryOp};
