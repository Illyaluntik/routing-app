import{aQ as _,s as P,fp as L,i as U,aG as ee,a5 as Q,F as te,y as re}from"./index-CaoLwbR1.js";import{r as G,i as B,h as O}from"./TimeOnly-CQUth33y.js";import{t as ae}from"./ImmutableArray-BPVd6ESQ.js";import ne from"./FeatureLayer-BVtLfjoO.js";import"./enum-D0LZ-dqd.js";import"./UnknownTimeZone-7tPwvKCX.js";import"./MultiOriginJSONSupport-BAVlqMez.js";import"./FeatureLayerBase-BiwdncYp.js";import"./OperationalLayer-dtYVOmPN.js";import"./labelingInfo-CBIgwnLU.js";import"./SimpleRenderer-DJsS1e5G.js";import"./commonProperties-BpvfLt2f.js";import"./colorRamps-BgxfuDFH.js";import"./ColorStop-CWqYagNl.js";import"./visualVariableUtils-B57ANmY6.js";import"./jsonUtils-C1IvpZNN.js";import"./defaults3D-ivya3xoE.js";import"./defaults-BAlE9t0U.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-Cl341lK8.js";import"./diffUtils-qt8uR2Gq.js";import"./RendererLegendOptions-nTkh6EFE.js";import"./styleUtils-Cz1vH-LF.js";import"./NormalizationBinParametersMixin-I0lm4__P.js";import"./labelUtils-CWfoqZRT.js";import"./LayerFloorInfo-C90jqDBC.js";import"./Relationship-D-StIRGH.js";import"./serviceCapabilitiesUtils-CNG_8CT0.js";import"./infoFor3D-VMSlSy0z.js";import"./portalItemUtils-BGiFrKwk.js";import"./editsZScale-Ugxly4lw.js";import"./queryZScale-J59eJujY.js";import"./APIKeyMixin-DxCsFFgo.js";import"./ArcGISService-DXCFIWmp.js";import"./CustomParametersMixin-BOMzQIEt.js";import"./DisplayFilteredLayer-BpQxn8pe.js";import"./scaleUtils-CsWuzU5Z.js";import"./displayFilterUtils-Cb9Q3jm9.js";import"./EditBusLayer-BW0l4gae.js";import"./FeatureEffectLayer-CFWlL1ug.js";import"./FeatureEffect-CxICV0it.js";import"./FeatureFilter-Cvzej7Xt.js";import"./FeatureReductionLayer-BRmAPwS2.js";import"./FeatureReductionSelection-BRL0D4WO.js";import"./jsonUtils-KsdYykgc.js";import"./typeUtils-Cvpmo3c3.js";import"./ClassBreaksRenderer-BFuqZLUW.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-D4rTqbRM.js";import"./FieldsIndex-BiR-AzOu.js";import"./ArcadeExpression-BLhVUkj0.js";import"./utils-BLMWe3SZ.js";import"./defaultCIMValues-B0_T2GCo.js";import"./enums-Da5QEGm1.js";import"./heatmapUtils-D1vgNC_u.js";import"./vec42-CF-1ZD7A.js";import"./vec4f64-DPb6J-GU.js";import"./OrderedLayer-vZYcC173.js";import"./OrderByInfo-yCjIoSBh.js";import"./PortalLayer-B2Bto4YX.js";import"./RefreshableLayer-DwXOj26-.js";import"./TemporalLayer-CCXX9TBo.js";import"./TimeInfo-B5bfy7wZ.js";import"./TrackableLayer-w06pmbIA.js";import"./FeatureTemplate-BvEL2WCK.js";import"./FeatureType-V5ezYApE.js";import"./fieldProperties-DCP1Zlrw.js";import"./TitleCreator-E168j-ki.js";import"./versionUtils-DRwsPTJv.js";import"./styleUtils-3trbHmg-.js";import"./popupUtils-C3mgajjP.js";import"./interfaces-CL2NbQte.js";let v=null;function oe(e,n,a,o={}){const r=n.elementType,i="value",s=r.type==="array"?[{name:i,type:r.type,elementType:r.elementType}]:r.type==="dictionary"?[{name:i,type:r.type,properties:r.properties}]:[{name:i,type:r.type}];return new ae(e.map((p=>{const t={};return R(t,s,{[i]:p},a,o),t[i]})))}function ie(e,n,a={}){const o=e instanceof re?new ne({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return n.constructFeatureSet(o,a.spatialReference,null,!0,a.lruCache,a.interceptor)}function pe(e,n,a={}){const{spatialReference:o,interceptor:r,lruCache:i}=a;return typeof e=="string"?n.createFeatureSetCollectionFromService(e,o,i,r):n.createFeatureSetCollectionFromMap(e,o,i,r)}function ce(e,n,a,o={}){const r=Object.create(null);return R(r,n.properties,e,a,o),new v.Dictionary(r)}function R(e,n,a,o,r={}){const i={};for(const s of Object.keys(a))i[s.toLowerCase()]=a[s];for(const s of n){const p=s.name.toLowerCase();if(r.variablesPreProcessed)e[p]=i[p];else switch(s.type){case"array":{const t=i[p];e[p]=t==null?null:oe(t,s,o,r);break}case"feature":{const t=i[p];e[p]=t==null?null:v.Feature.createFromGraphic(t,r?.timeZone);break}case"featureSet":{const t=i[p];e[p]=t==null?null:o?ie(t,o,r):null;break}case"featureSetCollection":{const t=i[p];e[p]=t==null?null:o?pe(t,o,r):null;break}case"dictionary":{const t=i[p];e[p]=t==null?null:ce(t,s,o,r);break}case"date":{const t=i[p];e[p]=t?t instanceof O?t:r?.timeZone?O.dateJSAndZoneToArcadeDate(t,r?.timeZone):O.dateJSToArcadeDate(t):null;break}case"dateOnly":{const t=i[p];e[p]=t?t instanceof B?t:B.fromReader(t):null;break}case"time":{const t=i[p];e[p]=t?t instanceof G?t:G.fromReader(t):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[p]=i[p];break;case"voxel":{const t=i[p];e[p]=t==null?null:new v.Voxel(t,r?.timeZone);break}}}}function V(e,n){for(const a of e)n.push(a),a.type==="dictionary"&&V(a.properties,n);return n}function D(e,n,a,o,r){const{spatialReference:i,interceptor:s,lruCache:p,console:t,abortSignal:x,timeZone:C,services:S={portal:Q.getDefault()}}=a,f={vars:{},spatialReference:i,interceptor:s,timeZone:C,lrucache:p,useAsync:r,services:S,console:t,abortSignal:x};return n&&R(f.vars,e.variables,n,o,a),f}function w(e,n){switch(n.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const a=(e.type,e),o="geometry"in a?a.geometry():null,r="readAttributes"in a?a.readAttributes():a.attributes;return new te({geometry:o,attributes:r})}case"dictionary":{const a=e,o=a.attributes,r={};for(const i of Object.keys(o))r[i]=w(a.field(i),n);return r}case"array":return("toArray"in e?e.toArray():e).map((a=>w(a,n)))}return e}const J={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},M={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},z={variables:[{name:"$voxel",type:"voxel"}]},N=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",J],["popup-element",J],["popup-feature-reduction",M],["popup-element-feature-reduction",M],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",z],["popup-element-voxel",z]]);function Dt(e){e==="feature-reduction-popup"?(L(U.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):e==="feature-reduction-popup-element"&&(L(U.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const n=N.get(e);if(!n){const a=Array.from(N.keys()).map((o=>`'${o}'`)).join(", ");throw new P("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${a}`)}return ee(n)}async function Pt(e,n,a={}){v||(v=await _());const{arcade:o,arcadeUtils:r,batchExec:{createBatchExecutor:i},aiServices:{BatchTranslationServiceFactory:s,PortalTranslationService:p}}=v,{loadScriptDependencies:t,referencesMember:x,scriptIsAsync:C}=o,S=V(n.variables,[]),f=S.filter((c=>c.type==="featureSet"||c.type==="featureSetCollection")).map((c=>c.name.toLowerCase())),l=o.parseScript(e,f);if(!l)throw new P("arcade:invalid-script","Unable to create SyntaxTree");const X=r.extractFieldNames(l),Y=o.scriptTouchesGeometry(l),j=S.map((c=>c.name.toLowerCase())).filter((c=>x(l,c))),d=C(l,f);await t(l,d,f);const E={vars:{},useAsync:d};for(const c of j)E.vars[c]="any";const{lruCache:A,services:k}=a,T=o.compileScript(l,E),F=o.featureSetUtils();return{execute:(c,m={})=>{if(d)throw new P("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const u={...k,...m.services},b={lruCache:A,...m,services:u},y=T(D(n,c,b,F,d));return m.rawOutput?y:w(y,r)},executeAsync:async(c,m={})=>{const u={...k,...m.services},b={lruCache:A,...m,services:u},y=await T(D(n,c,b,F,d));return m.rawOutput?y:w(y,r)},executeAsyncBatch:async(c,m,u={})=>{const b=[],y=i(c,(async($,g)=>{const H=m($);try{const h={...I,translation:q.create(g)},K={lruCache:A,...u,services:h},Z=await T(D(n,H,K,F,d)),W=u.rawOutput?Z:w(Z,r);b.push({id:g.id,result:{status:"fulfilled",value:W}})}catch(h){throw b.push({id:g.id,result:{status:"rejected",reason:h}}),h}}),u.maxConcurrency??64,u.abortSignal),I={...k,...u.services},q=new s(y,I.translation??new p(I.portal??Q.getDefault(),u.console));return await y.run(),b.sort((({id:$},{id:g})=>$-g)).map((({result:$})=>$))},isAsync:d,variablesUsed:j,fieldsUsed:X,geometryUsed:Y,syntaxTree:l}}export{Pt as createArcadeExecutor,Dt as createArcadeProfile};
