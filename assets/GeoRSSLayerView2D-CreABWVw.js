import{w as l,x as h,y as g,V as w,A as f,n as u,v as d}from"./index-DVueJeH0.js";import{m as n}from"./SimpleRenderer-BEm5-AgL.js";import{t as V}from"./jsonUtils-CG6n_wCA.js";import{S as b,u as S}from"./LayerView-CYGl7ByA.js";import{t as _}from"./GraphicContainer-BnFEh60A.js";import{O as T}from"./GraphicsView2D-DTPh4TWQ.js";import"./commonProperties-BI4u18af.js";import"./colorRamps-DYoNnro-.js";import"./ColorStop-Dmxg48w8.js";import"./visualVariableUtils-BcUhr0YY.js";import"./jsonUtils-BoVCALOD.js";import"./defaults3D-WyW2nW3k.js";import"./defaults-BcIFANsl.js";import"./defaultsJSON-GKolV7NZ.js";import"./typeUtils-BmdBrJzZ.js";import"./ClassBreaksRenderer-CzZcV_Ee.js";import"./RendererLegendOptions-04LvIJgS.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-CbEa-D1D.js";import"./FieldsIndex-CK4mbtzl.js";import"./UnknownTimeZone-Dg1lf0_a.js";import"./ArcadeExpression-DcMx8yOp.js";import"./TimeOnly-CFDlcqhZ.js";import"./enum-DIZxwjYA.js";import"./utils-0FipLf9Z.js";import"./defaultCIMValues-B0_T2GCo.js";import"./enums-Da5QEGm1.js";import"./heatmapUtils-DE-2sIa4.js";import"./vec42-cDE3-gTJ.js";import"./vec4f64-DPb6J-GU.js";import"./UniqueValueRenderer-jIocxezY.js";import"./diffUtils-S_b-_C0w.js";import"./styleUtils-Dk-z0vji.js";import"./Container-_Eyp3nvG.js";import"./layerViewUtils-95BS84K2.js";import"./AGraphicContainer-BCEzA_z4.js";import"./TechniqueInstance-D_vJwvBZ.js";import"./UpdateTracking2D-CRs0gtig.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-B6tCc0Fw.js";import"./memoryEstimations-BcvSY_3G.js";import"./GeometryUtils-D4IK7G57.js";import"./rasterizingUtils-LfP-dpB5.js";import"./floatRGBA-BMDCsb6n.js";import"./Rect-CUzevAry.js";import"./Utils-CYafm8A-.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-5qFhVzFc.js";import"./ProgramTemplate-D8nkYGcX.js";import"./TileContainer-Bl4joD2c.js";import"./WGLContainer-BrR9EIkL.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-H2dD46QT.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-Cp23-y9J.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-eyyqy0tN.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-DYjNYAaX.js";import"./ShaderBuilder-7fvZQXyF.js";import"./BindType-BBwFZqyN.js";import"./utils-BCrcOQ2i.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-KoGz60Nx.js";import"./OverrideHelper-JZlY737d.js";import"./colorUtils-BoovcAoo.js";import"./quantizationUtils-fpzdciyW.js";import"./AttributeStore-nEZcvrlu.js";import"./labelUtils-BAG8RDf0.js";import"./queryUtils-DJECM9UY.js";import"./json-Wa8cmqdu.js";import"./timeSupport-HZIvjVVx.js";import"./normalizeUtilsSync-B8_BUcZF.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-CActU7Si.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap((r=>{const i=this._popupTemplates.get(r),m=r.hitTest(t);for(const e of m)e.layer=p,e.sourceLayer=p,e.popupTemplate=i;return m})).map((r=>({type:"graphic",graphic:r,layer:p,mapPoint:t})))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l((()=>this.layer?.featureCollections),(t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=g.fromJSON(p),m=new w(i.features),e=r.drawingInfo,c=o?f.fromJSON(o):null,s=V(e.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:m,renderer:s,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}}),h),l((()=>this.layer?.polygonSymbol),(t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})}),h),l((()=>this.layer?.lineSymbol),(t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})}),h),l((()=>this.layer?.pointSymbol),(t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})}),h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Kt=y;export{Kt as default};
