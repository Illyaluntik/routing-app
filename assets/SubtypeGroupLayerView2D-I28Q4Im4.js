import{w as a,x as n,bm as d,n as u,v as l}from"./index-CIvzYPzY.js";import{c as g}from"./FeatureLayerView2D-DxIRsUJE.js";import"./Container-LCBa-Kuh.js";import"./featureConversionUtils-DHiwzt65.js";import"./OptimizedFeature-DsswuzeX.js";import"./memoryEstimations-OKQODrhX.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureFilter-CxnQ2Kbx.js";import"./labelingInfo-BKuV8eQG.js";import"./SimpleRenderer-CfoG_VYP.js";import"./commonProperties-C90DHbM8.js";import"./colorRamps--pvRdS00.js";import"./ColorStop-BLS-yQlk.js";import"./visualVariableUtils-9FwH9fcf.js";import"./jsonUtils-B4k9BhPC.js";import"./defaults3D-Cq9zCdkJ.js";import"./defaults-2Eoo-Em5.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-Dt4x8KbJ.js";import"./diffUtils-DlgBFjqf.js";import"./RendererLegendOptions-BkodElHl.js";import"./styleUtils-DtlEo6iZ.js";import"./NormalizationBinParametersMixin-BtYmt75J.js";import"./labelUtils-Bx8_cFri.js";import"./timeSupport-DADAWXi2.js";import"./AttributeBinsFeatureSet-CnRM1AZl.js";import"./AttributeBinsQuery-DPDEDBlc.js";import"./queryUtils-C1p7gt2Z.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-BD5cbegk.js";import"./LayerView-u56X4Kex.js";import"./layerViewUtils-iFA1B3tF.js";import"./TechniqueInstance-C8SSNYtp.js";import"./UpdateTracking2D-DAGbjXaf.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-BaVK1rv6.js";import"./enums-Da5QEGm1.js";import"./utils-Dytr9oL9.js";import"./defaultCIMValues-B0_T2GCo.js";import"./rasterizingUtils-CS2T2fGI.js";import"./floatRGBA-CP18S7nP.js";import"./Rect-CUzevAry.js";import"./Utils-B_B-iLy7.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CQF4DbXn.js";import"./ProgramTemplate-BHEa_WJf.js";import"./TileContainer-j6kZ6qY-.js";import"./WGLContainer-Du_vL89H.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-H2dD46QT.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-C1fC-Dg1.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-DBxyv1eQ.js";import"./ShaderBuilder-DK3nVMta.js";import"./BindType-BBwFZqyN.js";import"./utils-CsddGOk8.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-Bv5CCpPE.js";import"./CircularArray-CujHzHWW.js";import"./OrderByInfo-BNozFMAs.js";import"./heatmapUtils-FMz0qSJp.js";import"./vec42-CYPJBKnA.js";import"./vec4f64-DPb6J-GU.js";import"./SDFHelper-AyvKO_j8.js";import"./constants-B4mRqufT.js";import"./bundle-B2FM5W1M.js";import"./displayFilterUtils-DgUuq60z.js";import"./FeatureEffect-CE_U3OYt.js";import"./floorFilterUtils-n6UOt7ty.js";import"./popupUtils-DBCvMoNq.js";import"./RefreshableLayerView-7nKZxBSI.js";let i=class extends g{initialize(){this.addHandles([a((()=>this.view.scale),(()=>this._update()),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some((s=>s.renderer!=null)),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const Ci=i;export{Ci as default};
