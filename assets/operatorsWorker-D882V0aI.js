const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/disjointOperator-B4nbTZx-.js","assets/ProjectionTransformation-D9B780Tr.js","assets/Envelope2D-BMtfOHN9.js","assets/Point2D-CD2RJRJ9.js","assets/Transformation2D-Cvw8Af54.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-CExwPuvJ.js","assets/index-UDJfKx5H.css","assets/OperatorDefinitions-DP7_WWTp.js","assets/jsonConverter-ChDoG0mz.js","assets/intersectsOperator-YTjWhtN1.js","assets/OperatorIntersects-BU9PkoX4.js","assets/touchesOperator-C-EOrXad.js","assets/OperatorTouches-CAsjmJpZ.js","assets/crossesOperator-Ntd9k52b.js","assets/OperatorCrosses-C7RHBKuX.js","assets/withinOperator-CEl_svKB.js","assets/OperatorWithin-Ef8058M5.js","assets/containsOperator-BP2gwUnX.js","assets/overlapsOperator-8At6KOth.js","assets/OperatorOverlaps-C9Y-O2uP.js","assets/equalsOperator-DoSVAvgJ.js","assets/apiConverter-B2UKbU5Z.js","assets/relateOperator-BTVzj3m6.js","assets/intersectionOperator-6ZPLL4J4.js","assets/operatorIntersection-D_mtb6DX.js","assets/unionOperator-CJcmuazC.js","assets/operatorUnion-CSnjH7NQ.js","assets/differenceOperator-DUOpXZfJ.js","assets/symmetricDifferenceOperator-DmTLQYWX.js","assets/clipOperator-yCc8gJ5I.js","assets/cutOperator-BvbWjMya.js","assets/areaOperator-C-4WY0x-.js","assets/unitConversion-CUmuNfsF.js","assets/enum-sbmN7i4Z.js","assets/geodeticAreaOperator-DoTa1qaG.js","assets/geodeticCurveType-CirnHLSB.js","assets/lengthOperator-CKpIaUpJ.js","assets/geodeticLengthOperator-BBJaU4gX.js","assets/distanceOperator-DjbXHveK.js","assets/densifyOperator-BKozzEep.js","assets/geodeticDensifyOperator-LNg5YdCz.js","assets/operatorGeodeticDensify-B99nGd1w.js","assets/generalizeOperator-DSmXRSwb.js","assets/OperatorGeneralize-DRgLO4K5.js","assets/bufferOperator--UjIcfEI.js","assets/operatorBuffer-D9dwLpM2.js","assets/GeometryCleaner-BEJM7I4l-DSNSBFki.js","assets/OperatorSimplifyOGC-Du0Q8vRv.js","assets/geodesicBufferOperator-DaKfJJAV.js","assets/operatorGeodesicBuffer-C8VeZ3Db.js","assets/offsetOperator-CRPtd0hu.js","assets/operatorOffset-I6XSOAku.js","assets/affineTransformOperator-MEyTD2T6.js","assets/Transformation-BeyPpG3C.js","assets/centroidOperator-CxdCVr71.js","assets/Centroid-DZi-eb9F-BPSXJUJR.js","assets/labelPointOperator-RQh0T7Bq.js","assets/OperatorProximity-DEDzA6q4.js","assets/simplifyOperator-CsI-5kRM.js","assets/operatorSimplify-D4UBD4J9.js","assets/simplifyOGCOperator-BVC8YX3t.js","assets/convexHullOperator-CFR6s5E5.js","assets/operatorConvexHull-Pz3vSCxy.js","assets/proximityOperator-D8vW54jg.js"])))=>i.map(i=>d[i]);
import{_ as i,aR as c}from"./index-CExwPuvJ.js";function _(t,e){let o;return{loaded:!1,load:()=>o??=e().then((n=>{E[t]={loaded:!0,execute:n}}))}}function u(t){return t==null?null:t.toJSON()}const E={disjoint:_("disjoint",(()=>i(()=>import("./disjointOperator-B4nbTZx-.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),intersects:_("intersects",(()=>i(()=>import("./intersectsOperator-YTjWhtN1.js"),__vite__mapDeps([10,11,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),touches:_("touches",(()=>i(()=>import("./touchesOperator-C-EOrXad.js"),__vite__mapDeps([12,13,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),crosses:_("crosses",(()=>i(()=>import("./crossesOperator-Ntd9k52b.js"),__vite__mapDeps([14,15,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),within:_("within",(()=>i(()=>import("./withinOperator-CEl_svKB.js"),__vite__mapDeps([16,17,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),contains:_("contains",(()=>i(()=>import("./containsOperator-BP2gwUnX.js"),__vite__mapDeps([18,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),overlaps:_("overlaps",(()=>i(()=>import("./overlapsOperator-8At6KOth.js"),__vite__mapDeps([19,20,1,2,3,4,5,6,7,8,9])).then((t=>t.execute)))),equals:_("equals",(async()=>{const t=await i(()=>import("./equalsOperator-DoSVAvgJ.js").then(e=>e.e),__vite__mapDeps([21,1,2,3,4,5,6,7,8,22,9]));return(e,o)=>t.execute(c(e),c(o))})),relate:_("relate",(async()=>{const t=await i(()=>import("./relateOperator-BTVzj3m6.js").then(e=>e.r),__vite__mapDeps([23,1,2,3,4,5,6,7,8,22,9]));return(e,o,n)=>t.execute(c(e),c(o),n)})),intersection:_("intersection",(()=>i(()=>import("./intersectionOperator-6ZPLL4J4.js"),__vite__mapDeps([24,6,7,25,5,3,1,2,4,8,9])).then((t=>t.execute)))),union:_("union",(()=>i(()=>import("./unionOperator-CJcmuazC.js"),__vite__mapDeps([26,27,5,3,1,2,4,6,7,8,9])).then((t=>t.executeMany)))),difference:_("difference",(async()=>{const t=await i(()=>import("./differenceOperator-DUOpXZfJ.js").then(e=>e.d),__vite__mapDeps([28,3,1,2,4,5,6,7,8,9,22]));return(e,o)=>u(t.execute(c(e),c(o)))})),symmetricDifference:_("symmetricDifference",(async()=>{const t=await i(()=>import("./symmetricDifferenceOperator-DmTLQYWX.js").then(e=>e.s),__vite__mapDeps([29,6,7,3,1,2,4,5,8,9,22]));return(e,o)=>u(t.execute(c(e),c(o)))})),clip:_("clip",(async()=>{const t=await i(()=>import("./clipOperator-yCc8gJ5I.js").then(e=>e.c),__vite__mapDeps([30,3,1,2,4,5,6,7,8,9,22]));return(e,o)=>u(t.execute(c(e),c(o)))})),cut:_("cut",(async()=>{const t=await i(()=>import("./cutOperator-BvbWjMya.js").then(e=>e.c),__vite__mapDeps([31,6,7,3,1,2,4,5,8,9,22]));return(e,o)=>t.execute(c(e),c(o)).map((n=>u(n)))})),area:_("area",(async()=>{const t=await i(()=>import("./areaOperator-C-4WY0x-.js").then(n=>n.a),__vite__mapDeps([32,6,7,3,2,1,4,5,8,9,22])),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:n,toAreaUnit:r}=await import("./unitConversion-CUmuNfsF.js");return{convertFromSpatialReferenceUnit:n,toAreaUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r)=>{const a=t.execute(c(n));return e(n.spatialReference,o(r),a)}})),geodeticArea:_("geodeticArea",(async()=>{const t=await i(()=>import("./geodeticAreaOperator-DoTa1qaG.js").then(r=>r.g),__vite__mapDeps([35,6,7,36])),{convert:e,squareMeters:o,toAreaUnit:n}=await i(async()=>{const{convert:r,squareMeters:a,toAreaUnit:s}=await import("./unitConversion-CUmuNfsF.js");return{convert:r,squareMeters:a,toAreaUnit:s}},__vite__mapDeps([33,34,6,7]));return await t.load(),(r,a,s)=>{const p=t.execute(c(r),{curveType:s});return e(o,n(a),p)}})),length:_("length",(async()=>{const t=await i(()=>import("./lengthOperator-CKpIaUpJ.js"),__vite__mapDeps([37,6,7,9,3,1,2,4,5,8])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CUmuNfsF.js");return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r)=>{const a=t.execute(n);return e(n.spatialReference,o(r),a)}})),geodeticLength:_("geodeticLength",(async()=>{const t=await i(()=>import("./geodeticLengthOperator-BBJaU4gX.js").then(r=>r.g),__vite__mapDeps([38,6,7,36])),{convert:e,meters:o,toLengthUnit:n}=await i(async()=>{const{convert:r,meters:a,toLengthUnit:s}=await import("./unitConversion-CUmuNfsF.js");return{convert:r,meters:a,toLengthUnit:s}},__vite__mapDeps([33,34,6,7]));return await t.load(),(r,a,s)=>{const p=t.execute(c(r),{curveType:s});return e(o,n(a),p)}})),distance:_("distance",(async()=>{const t=await i(()=>import("./distanceOperator-DjbXHveK.js").then(n=>n.d),__vite__mapDeps([39,3,6,7,1,2,4,5,8,22,9])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CUmuNfsF.js");return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a)=>{const s=t.execute(c(n),c(r));return e(n.spatialReference,o(a),s)}})),densify:_("densify",(async()=>{const t=await i(()=>import("./densifyOperator-BKozzEep.js").then(n=>n.d),__vite__mapDeps([40,6,7,3,1,2,4,5,8,9,22])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CUmuNfsF.js");return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a)=>(r=e(o(a),n.spatialReference,r),u(t.execute(c(n),r)))})),geodeticDensify:_("geodeticDensify",(async()=>{const t=await i(()=>import("./geodeticDensifyOperator-LNg5YdCz.js").then(r=>r.a),__vite__mapDeps([41,6,7,42,5,36])),{convert:e,meters:o,toLengthUnit:n}=await i(async()=>{const{convert:r,meters:a,toLengthUnit:s}=await import("./unitConversion-CUmuNfsF.js");return{convert:r,meters:a,toLengthUnit:s}},__vite__mapDeps([33,34,6,7]));return await t.load(),(r,a,s,p)=>(a=e(n(s),o,a),u(t.execute(c(r),a,{curveType:p})))})),generalize:_("generalize",(async()=>{const t=await i(()=>import("./generalizeOperator-DSmXRSwb.js").then(n=>n.g),__vite__mapDeps([43,6,7,3,1,2,4,5,8,9,44,22])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CUmuNfsF.js");return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a,s)=>(r=e(o(a),n.spatialReference,r),u(t.execute(c(n),r,s)))})),buffer:_("buffer",(async()=>{const t=await i(()=>import("./bufferOperator--UjIcfEI.js"),__vite__mapDeps([45,6,7,46,5,3,1,2,4,8,47,48,44,9])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CUmuNfsF.js");return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a)=>(r=e(o(a),n.spatialReference,r),t.execute(n,r))})),geodesicBuffer:_("geodesicBuffer",(async()=>{const t=await i(()=>import("./geodesicBufferOperator-DaKfJJAV.js"),__vite__mapDeps([49,6,7,50,5,36])),{convert:e,meters:o,toLengthUnit:n}=await i(async()=>{const{convert:r,meters:a,toLengthUnit:s}=await import("./unitConversion-CUmuNfsF.js");return{convert:r,meters:a,toLengthUnit:s}},__vite__mapDeps([33,34,6,7]));return await t.load(),(r,a,s,p)=>(a=e(n(s),o,a),t.execute(r,a,{curveType:p}))})),offset:_("offset",(async()=>{const t=await i(()=>import("./offsetOperator-CRPtd0hu.js"),__vite__mapDeps([51,6,7,52,5,1,2,3,4,8,9])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CUmuNfsF.js");return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([33,34,6,7]));return(n,r,a,s)=>(r=e(o(a),n.spatialReference,r),t.execute(n,r,s))})),rotate:_("rotate",(async()=>{const t=await i(()=>import("./affineTransformOperator-MEyTD2T6.js"),__vite__mapDeps([53,6,7,5,3,22,2,1,4,8,9])),{default:e}=await i(async()=>{const{default:o}=await import("./Transformation-BeyPpG3C.js");return{default:o}},__vite__mapDeps([54,3,4,6,7]));return(o,n,r,a)=>{const s=new e().rotate(n,r,a);return u(t.execute(c(o),s))}})),centroid:_("centroid",(async()=>{const t=await i(()=>import("./centroidOperator-CxdCVr71.js").then(e=>e.c),__vite__mapDeps([55,56,3,22,2,1,4,5,6,7,8,9]));return e=>u(t.execute(c(e)))})),labelPoint:_("labelPoint",(async()=>{const t=await i(()=>import("./labelPointOperator-RQh0T7Bq.js").then(e=>e.l),__vite__mapDeps([57,3,1,2,4,5,6,7,8,9,56,58,22]));return e=>u(t.execute(c(e)))})),simplify:_("simplify",(()=>i(()=>import("./simplifyOperator-CsI-5kRM.js"),__vite__mapDeps([59,60,5,3,1,2,4,6,7,8,9])).then((t=>t.execute)))),isSelfIntersecting:_("isSelfIntersecting",(async()=>{const{NonSimpleResult:t}=await i(()=>import("./OperatorDefinitions-DP7_WWTp.js"),[]),e=await i(()=>import("./simplifyOGCOperator-BVC8YX3t.js"),__vite__mapDeps([61,5,48,3,1,2,4,6,7,8,22,9])),o=new Set([5,6,7,10,11,12]);return n=>{const r=new t;return!e.isSimple(c(n),r)&&o.has(r.m_reason)}})),isSimple:_("isSimple",(()=>i(()=>import("./simplifyOperator-CsI-5kRM.js"),__vite__mapDeps([59,60,5,3,1,2,4,6,7,8,9])).then((t=>t.isSimple)))),convexHull:_("convexHull",(()=>i(()=>import("./convexHullOperator-CFR6s5E5.js"),__vite__mapDeps([62,63,5,3,1,2,4,6,7,8,9])).then((t=>t.execute)))),getNearestCoordinate:_("getNearestCoordinate",(async()=>{const t=await i(()=>import("./proximityOperator-D8vW54jg.js").then(e=>e.p),__vite__mapDeps([64,3,2,1,4,5,6,7,8,9,58,22]));return(e,o,n)=>{const r=t.getNearestCoordinate(c(e),c(o),n);return{...r,coordinate:u(r.coordinate)}}})),getNearestVertex:_("getNearestVertex",(async()=>{const t=await i(()=>import("./proximityOperator-D8vW54jg.js").then(e=>e.p),__vite__mapDeps([64,3,2,1,4,5,6,7,8,9,58,22]));return(e,o)=>{const n=t.getNearestVertex(c(e),c(o));return{...n,coordinate:u(n.coordinate)}}}))};function d(t,e){const o=E[t];return o.loaded?o.execute.apply(void 0,e):o.load().then((()=>d(t,e)))}export{d as invokeGeometryOp};
