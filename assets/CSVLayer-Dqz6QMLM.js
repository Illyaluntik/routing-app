import{hf as v,f4 as w,y as S,cO as O,bA as b,bm as F,n as i,u as r,v as d,af as q,a6 as I,I as N,c0 as l,s as c,bq as _,hg as J,hh as C}from"./index-s9Itg6e4.js";import P from"./FeatureLayer-BaHpn5ne.js";import{y as j}from"./clientSideDefaults-Ju-9hgLq.js";import"./MultiOriginJSONSupport-Dp9iRmyx.js";import"./FeatureLayerBase-Dazjt6M9.js";import"./OperationalLayer-3lXSr6DZ.js";import"./labelingInfo-BGoEkIyj.js";import"./SimpleRenderer-C-uH7Shj.js";import"./commonProperties-B11pxGdJ.js";import"./colorRamps-TAG68d_F.js";import"./ColorStop-BMwckCwH.js";import"./visualVariableUtils-DRY6Huxo.js";import"./jsonUtils-C0d_Oczx.js";import"./defaults3D-Dm7ISOjd.js";import"./defaults-gtidjUpY.js";import"./defaultsJSON-GKolV7NZ.js";import"./UniqueValueRenderer-1jqYBq1T.js";import"./diffUtils-DCCkNEV2.js";import"./RendererLegendOptions-DoIE2f4G.js";import"./styleUtils-m-S0pwJv.js";import"./NormalizationBinParametersMixin-Cu0OGqjq.js";import"./labelUtils-CaTjLS0R.js";import"./LayerFloorInfo-fgaBnmcM.js";import"./Relationship-CahlySf0.js";import"./serviceCapabilitiesUtils-D4jU6F1Z.js";import"./infoFor3D-VMSlSy0z.js";import"./portalItemUtils-CbRKxQPk.js";import"./editsZScale-gxczE7ug.js";import"./queryZScale-CjJGbGkY.js";import"./APIKeyMixin-B8jNMHM2.js";import"./ArcGISService-DVmaEujU.js";import"./CustomParametersMixin-BFHR5QhG.js";import"./DisplayFilteredLayer-naDAtUw6.js";import"./scaleUtils-2woyTAtK.js";import"./displayFilterUtils-KmGKqrV8.js";import"./EditBusLayer-CilmRQHh.js";import"./FeatureEffectLayer-WfsFFj-j.js";import"./FeatureEffect-CL9FrXTw.js";import"./FeatureFilter-DLLYp6OD.js";import"./FeatureReductionLayer-CDZSLdbH.js";import"./FeatureReductionSelection-DyAagJkw.js";import"./jsonUtils-BIvgD8oQ.js";import"./typeUtils-Cit7O5a0.js";import"./ClassBreaksRenderer-CkXmsVyA.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-TWQRkWW4.js";import"./FieldsIndex-BwFuh9tX.js";import"./UnknownTimeZone-BpzsVre7.js";import"./ArcadeExpression-BKGLP8d4.js";import"./TimeOnly-BpfYU0TK.js";import"./enum-AEcCz2XL.js";import"./utils-Jm4RAe9C.js";import"./defaultCIMValues-B0_T2GCo.js";import"./enums-Da5QEGm1.js";import"./heatmapUtils-hPbqTyp0.js";import"./vec42-CHSyd2wv.js";import"./vec4f64-DPb6J-GU.js";import"./OrderedLayer-CIYbxqNG.js";import"./OrderByInfo-Clgv1Wgs.js";import"./PortalLayer-CmYNN0XW.js";import"./RefreshableLayer-Ceji6paH.js";import"./TemporalLayer-DP9jWR2R.js";import"./TimeInfo-Cb8bEYOr.js";import"./TrackableLayer-BmZsvZn5.js";import"./FeatureTemplate-CHZpPJgM.js";import"./FeatureType-D2mJU8PK.js";import"./fieldProperties-B4z3j3Ao.js";import"./TitleCreator-DCJ3yWfu.js";import"./versionUtils-qQO-Kj1s.js";import"./styleUtils-C00Wmo4i.js";import"./popupUtils-DZyMljA5.js";import"./interfaces-CL2NbQte.js";import"./QueryEngineCapabilities-CsRUnGk7.js";let a=class extends v{constructor(t){super(t),this.type="csv",this.refresh=w((async e=>{await this.load();const{extent:s,timeExtent:n}=await this._connection.invoke("refresh",e);return s&&(this.sourceJSON.extent=s),n&&(this.sourceJSON.timeInfo.timeExtent=[n.start,n.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const s=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return S.fromJSON(s)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const s=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:s.count,extent:O.fromJSON(s.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async queryAttributeBins(t,e={}){return await this.load(),this._connection.invoke("queryAttributeBins",t?t.toJSON():null,e)}async _startWorker(t){this._connection=await b("CSVSourceWorker",{strategy:F("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:s,fields:n,latitudeField:m,longitudeField:h,spatialReference:y,timeInfo:f}=this.loadOptions,u=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:n?.map((g=>g.toJSON())),latitudeField:m,longitudeField:h,spatialReference:y?.toJSON(),timeInfo:f?.toJSON()}},{signal:t});this.locationInfo=u.locationInfo,this.sourceJSON=u.layerDefinition,this.delimiter=u.delimiter}};i([r()],a.prototype,"type",void 0),i([r()],a.prototype,"loadOptions",void 0),i([r()],a.prototype,"customParameters",void 0),i([r()],a.prototype,"locationInfo",void 0),i([r()],a.prototype,"sourceJSON",void 0),i([r()],a.prototype,"delimiter",void 0),a=i([d("esri.layers.graphics.sources.CSVSource")],a);function p(t,e){throw new c(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let o=class extends P{constructor(...t){super(...t),this.geometryType="point",this.capabilities=j(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=q.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(I).then((async()=>this.initLayerProperties(await this.createGraphicsSource(e))));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!e.layerDefinition?.drawingInfo?.labelingInfo}set url(t){if(!t)return void this._set("url",t);const e=N(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new a({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then((()=>this.source.queryFeatures(l.from(t)||this.createQuery()))).then((s=>{if(s?.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s}))}async queryObjectIds(t,e){return await this.load(),this.source.queryObjectIds(l.from(t)||this.createQuery())}queryFeatureCount(t,e){return this.load().then((()=>this.source.queryFeatureCount(l.from(t)||this.createQuery())))}queryExtent(t,e){return this.load().then((()=>this.source.queryExtent(l.from(t)||this.createQuery())))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new c("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return p(this,"csv-layer:save")}async saveAs(t,e){return p(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],o.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],o.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),i([_("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],o.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],o.prototype,"operationalLayerType",void 0),i([r()],o.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],o.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:a,readOnly:!0})],o.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],o.prototype,"type",void 0),i([r({json:{read:C,write:{isRequired:!0,ignoreOrigin:!0,writer:J}}})],o.prototype,"url",null),o=i([d("esri.layers.CSVLayer")],o);const Yt=o;export{Yt as default};
