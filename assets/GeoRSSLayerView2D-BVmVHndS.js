import{w as l,x as h,y as g,V as w,A as f,n as u,v as d}from"./index-DovH5zcQ.js";import{m as n}from"./SimpleRenderer-BRwypqW6.js";import{t as V}from"./jsonUtils-DQEN6TiK.js";import{S as b,u as S}from"./LayerView-DRTECJ3D.js";import{t as _}from"./GraphicContainer-Bd_AuP6g.js";import{O as T}from"./GraphicsView2D-6RepKK3l.js";import"./commonProperties-CCBfOcCU.js";import"./colorRamps-CDLRu91s.js";import"./ColorStop-BvOx3X4Z.js";import"./visualVariableUtils-B8_SwPUA.js";import"./jsonUtils-FFbmUrMY.js";import"./defaults3D-vgprcTiT.js";import"./defaults-BSF2njA9.js";import"./defaultsJSON-GKolV7NZ.js";import"./typeUtils-D0HQHqXK.js";import"./ClassBreaksRenderer-CPz3wIjz.js";import"./RendererLegendOptions-BKdhdEv9.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-UqumwOer.js";import"./FieldsIndex-DHzWtM51.js";import"./UnknownTimeZone-xWt-6Q9y.js";import"./ArcadeExpression-BUcMvYjr.js";import"./TimeOnly-B5qK17CV.js";import"./enum-pu4vB3-9.js";import"./utils-gnrmDMqb.js";import"./defaultCIMValues-B0_T2GCo.js";import"./enums-Da5QEGm1.js";import"./heatmapUtils-BdR0d8jU.js";import"./vec42-BfrU9RxV.js";import"./vec4f64-DPb6J-GU.js";import"./UniqueValueRenderer-DIBimUir.js";import"./diffUtils-u-Kqaosy.js";import"./styleUtils-noXRlgMu.js";import"./Container-CPqr8hja.js";import"./layerViewUtils-C2FkzorF.js";import"./AGraphicContainer-Dtyy3If-.js";import"./TechniqueInstance-Bq7Vnw23.js";import"./UpdateTracking2D-CWAcWQCS.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-ChR3m5TL.js";import"./memoryEstimations-DRAh6qbV.js";import"./GeometryUtils-DFQqdGnT.js";import"./rasterizingUtils-CsWlu9hm.js";import"./floatRGBA-BlnE6hTW.js";import"./Rect-CUzevAry.js";import"./Utils-BR3XcwHq.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-LExSWKf1.js";import"./ProgramTemplate-CfFzx_e8.js";import"./TileContainer-BNSWfqGL.js";import"./WGLContainer-BwnresEw.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-H2dD46QT.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-K7Q9_lCB.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-CJ2k-xPa.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-DuFbaVen.js";import"./ShaderBuilder-OVDSdw4U.js";import"./BindType-BBwFZqyN.js";import"./utils-Cr6MkOQG.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-qbOikeJG.js";import"./OverrideHelper-Nh5MSXKO.js";import"./colorUtils-DB8-Nwf-.js";import"./quantizationUtils-YwB1JF-O.js";import"./AttributeStore-BpSfY26T.js";import"./labelUtils-5P1HvLJM.js";import"./queryUtils-D7UUnW6o.js";import"./json-Wa8cmqdu.js";import"./timeSupport-uH6qL3b0.js";import"./normalizeUtilsSync-0j877PtR.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-BaHZKje8.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap((r=>{const i=this._popupTemplates.get(r),m=r.hitTest(t);for(const e of m)e.layer=p,e.sourceLayer=p,e.popupTemplate=i;return m})).map((r=>({type:"graphic",graphic:r,layer:p,mapPoint:t})))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l((()=>this.layer?.featureCollections),(t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=g.fromJSON(p),m=new w(i.features),e=r.drawingInfo,c=o?f.fromJSON(o):null,s=V(e.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:m,renderer:s,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}}),h),l((()=>this.layer?.polygonSymbol),(t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})}),h),l((()=>this.layer?.lineSymbol),(t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})}),h),l((()=>this.layer?.pointSymbol),(t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})}),h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Kt=y;export{Kt as default};
