import{w as l,x as h,y as g,V as w,A as f,n as u,v as d}from"./index-CaoLwbR1.js";import{m as n}from"./SimpleRenderer-DJsS1e5G.js";import{t as V}from"./jsonUtils-KsdYykgc.js";import{S as b,u as S}from"./LayerView-BrgyuKM_.js";import{t as _}from"./GraphicContainer-snFI_Num.js";import{O as T}from"./GraphicsView2D-DOLWnXc1.js";import"./commonProperties-BpvfLt2f.js";import"./colorRamps-BgxfuDFH.js";import"./ColorStop-CWqYagNl.js";import"./visualVariableUtils-B57ANmY6.js";import"./jsonUtils-C1IvpZNN.js";import"./defaults3D-ivya3xoE.js";import"./defaults-BAlE9t0U.js";import"./defaultsJSON-GKolV7NZ.js";import"./typeUtils-Cvpmo3c3.js";import"./ClassBreaksRenderer-BFuqZLUW.js";import"./RendererLegendOptions-nTkh6EFE.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-D4rTqbRM.js";import"./FieldsIndex-BiR-AzOu.js";import"./UnknownTimeZone-7tPwvKCX.js";import"./ArcadeExpression-BLhVUkj0.js";import"./TimeOnly-CQUth33y.js";import"./enum-D0LZ-dqd.js";import"./utils-BLMWe3SZ.js";import"./defaultCIMValues-B0_T2GCo.js";import"./enums-Da5QEGm1.js";import"./heatmapUtils-D1vgNC_u.js";import"./vec42-CF-1ZD7A.js";import"./vec4f64-DPb6J-GU.js";import"./UniqueValueRenderer-Cl341lK8.js";import"./diffUtils-qt8uR2Gq.js";import"./styleUtils-Cz1vH-LF.js";import"./Container-vS14dhgL.js";import"./layerViewUtils-DVZ5KdI5.js";import"./AGraphicContainer-Bin6N1Ul.js";import"./TechniqueInstance-BDt0Wbb2.js";import"./UpdateTracking2D-BgKf3dp1.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-CpDeLxSu.js";import"./memoryEstimations-B2IbCRpd.js";import"./GeometryUtils-CpgdMZ49.js";import"./rasterizingUtils-CE6usByd.js";import"./floatRGBA-Bj_6gGwA.js";import"./Rect-CUzevAry.js";import"./Utils-Du9DRH13.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BynWU26I.js";import"./ProgramTemplate-B0aIQeAW.js";import"./TileContainer-BjXdfZFO.js";import"./WGLContainer-CSYMmE7W.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-H2dD46QT.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DsZpulkr.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-zg6Y5k03.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-BTWnFsxu.js";import"./ShaderBuilder-B_oGAyew.js";import"./BindType-BBwFZqyN.js";import"./utils-BEnJ4nfr.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DDQ7fZ4X.js";import"./OverrideHelper-CYCwWxQc.js";import"./colorUtils-Bie1tVtI.js";import"./quantizationUtils-CVGPjKxw.js";import"./AttributeStore-BTkYKjLm.js";import"./labelUtils-CWfoqZRT.js";import"./queryUtils-DsfQK4GD.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CUIUmEHD.js";import"./normalizeUtilsSync-DQKm6Eqn.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-Cr2v-ooo.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap((r=>{const i=this._popupTemplates.get(r),m=r.hitTest(t);for(const e of m)e.layer=p,e.sourceLayer=p,e.popupTemplate=i;return m})).map((r=>({type:"graphic",graphic:r,layer:p,mapPoint:t})))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l((()=>this.layer?.featureCollections),(t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=g.fromJSON(p),m=new w(i.features),e=r.drawingInfo,c=o?f.fromJSON(o):null,s=V(e.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:m,renderer:s,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}}),h),l((()=>this.layer?.polygonSymbol),(t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})}),h),l((()=>this.layer?.lineSymbol),(t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})}),h),l((()=>this.layer?.pointSymbol),(t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})}),h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Kt=y;export{Kt as default};
