import{c1 as oe,ax as C,n as a,u,i$ as D,v as U,ay as J,az as ue,j0 as M,j1 as pe,eQ as ce,eR as ye,V as b,af as L,cH as me,ca as de,cO as fe,fj as he,dF as Q,bu as Y,bs as we,i as Z,s as B,I as be,a4 as ge,a5 as Se,j2 as ve,j3 as Be,l as Ie,F as Pe,A as Ne,j4 as Ce,ag as De,ah as _e,b3 as Oe,eS as Le,bt as Te,bq as I}from"./index-Dew1EvIF.js";import{S as Fe}from"./MultiOriginJSONSupport-C7cMD6_J.js";import{i as Re}from"./originUtils-CGcjwL6o.js";import{b as Ae}from"./OperationalLayer-DGU0-gfu.js";import{j as ke}from"./PortalLayer-Ai94gWLG.js";import{E as xe}from"./portalItemUtils-DLNruFmt.js";import{o as $e}from"./jsonUtils-CuVVez9u.js";import{c as j,a as G,S as T,h as F,d as R,f as E,b as A,e as je}from"./Stop-BQWwku_l.js";import"./typeUtils-BkklGB44.js";import"./ClassBreaksRenderer-DtjARRhG.js";import"./commonProperties-nPMw4okf.js";import"./colorRamps-B91Byf_c.js";import"./ColorStop-C6iy7W0_.js";import"./visualVariableUtils-f_v1WgZx.js";import"./jsonUtils-BUyqjrCW.js";import"./defaults3D-C_BBOZCJ.js";import"./defaults-D3Cv9_Ke.js";import"./defaultsJSON-GKolV7NZ.js";import"./RendererLegendOptions-D0MVApXA.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-C0_FUI88.js";import"./FieldsIndex-Cdya2OBl.js";import"./UnknownTimeZone-BruLdDqT.js";import"./ArcadeExpression-DziyN578.js";import"./TimeOnly-Brk3x2oJ.js";import"./enum-B0n7OVsN.js";import"./utils-B6LHIIdb.js";import"./defaultCIMValues-B0_T2GCo.js";import"./enums-Da5QEGm1.js";import"./heatmapUtils-DSnG1Lzz.js";import"./vec42-P6fSsgl_.js";import"./vec4f64-DPb6J-GU.js";import"./SimpleRenderer-BJ9W2MPu.js";import"./UniqueValueRenderer-CwnryRrJ.js";import"./diffUtils-BE3cTqsC.js";import"./styleUtils-CBZIkeqD.js";let P=class extends oe{constructor(t){super(t),this.break=new C({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new C({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new C({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new C({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new C({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new C({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};a([u({types:D})],P.prototype,"break",void 0),a([u({types:D})],P.prototype,"first",void 0),a([u({types:D})],P.prototype,"unlocated",void 0),a([u({types:D})],P.prototype,"last",void 0),a([u({types:D})],P.prototype,"middle",void 0),a([u({types:D})],P.prototype,"waypoint",void 0),P=a([U("esri.layers.support.RouteStopSymbols")],P);let v=class extends oe{constructor(t){super(t),this.directionLines=new J({color:[0,122,194],width:6}),this.directionPoints=new C({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new C({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new ue({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new J({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new J({width:8,color:[20,89,127]}),this.stops=new P}};a([u({types:M})],v.prototype,"directionLines",void 0),a([u({types:D})],v.prototype,"directionPoints",void 0),a([u({types:D})],v.prototype,"pointBarriers",void 0),a([u({types:pe})],v.prototype,"polygonBarriers",void 0),a([u({types:M})],v.prototype,"polylineBarriers",void 0),a([u({types:M})],v.prototype,"routeInfo",void 0),a([u({type:P})],v.prototype,"stops",void 0),v=a([U("esri.layers.support.RouteSymbols")],v);function k(t){if(!t.length)return;const o=t.toArray(),e=o.map((({objectId:i})=>i)).filter((i=>i!=null));let r=Math.max(...e,0);for(const i of o)i.objectId==null&&(i.objectId=++r)}function x(t,o){return!!t.length&&t.length===o.length&&H(t)&&H(o)}function H(t){return t.every((({objectId:o})=>o!=null))}function q(t){return t.length?t:null}function z(t){switch(t){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:z("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:z("esriGeometryPolyline")}}}function $(t){return"layers"in t}function Ge(t){return t.declaredClass==="esri.rest.support.FeatureSet"}function Je(t){return t.declaredClass==="esri.rest.support.NetworkFeatureSet"}function Me(t,o){for(const e of t){const r=o.find((i=>i.objectId===e.objectId));r&&(r.addedCost=e.addedCost,r.barrierType=e.barrierType,r.costs=e.costs,r.curbApproach=e.curbApproach,r.fullEdge=e.fullEdge,r.geometry=e.geometry,r.name=e.name,r.sideOfEdge=e.sideOfEdge,r.sourceId=e.sourceId,r.sourceOid=e.sourceOid,r.status=e.status,r.symbol=e.symbol)}}function Ee(t,o){for(const e of t){const r=o.find((i=>i.objectId===e.objectId));r&&(r.barrierType=e.barrierType,r.costs=e.costs,r.geometry=e.geometry,r.name=e.name,r.scaleFactor=e.scaleFactor,r.symbol=e.symbol)}}function qe(t,o){for(const e of t){const r=o.find((i=>i.objectId===e.objectId));r&&(r.barrierType=e.barrierType,r.costs=e.costs,r.geometry=e.geometry,r.name=e.name,r.scaleFactor=e.scaleFactor,r.symbol=e.symbol)}}function We(t,o){for(const e of t){const r=o.find((i=>i.objectId===e.objectId));r&&(r.arriveCurbApproach=e.arriveCurbApproach,r.arriveTime=e.arriveTime,r.arriveTimeOffset=e.arriveTimeOffset,r.cumulativeCosts=e.cumulativeCosts,r.cumulativeDistance=e.cumulativeDistance,r.cumulativeDuration=e.cumulativeDuration,r.curbApproach=e.curbApproach,r.departCurbApproach=e.departCurbApproach,r.departTime=e.departTime,r.departTimeOffset=e.departTimeOffset,r.distanceToNetworkInMeters=e.distanceToNetworkInMeters,r.geometry=e.geometry,r.lateDuration=e.lateDuration,r.name=e.name,r.navLatency=e.navLatency,r.posAlong=e.posAlong,r.routeName=e.routeName,r.serviceCosts=e.serviceCosts,r.serviceDistance=e.serviceDistance,r.serviceDuration=e.serviceDuration,r.sequence=e.sequence,r.sideOfEdge=e.sideOfEdge,r.snapX=e.snapX,r.snapY=e.snapY,r.snapZ=e.snapZ,r.sourceId=e.sourceId,r.sourceOid=e.sourceOid,r.status=e.status,r.symbol=e.symbol,r.timeWindowEnd=e.timeWindowEnd,r.timeWindowStart=e.timeWindowStart,r.violations=e.violations,r.waitDuration=e.waitDuration,r.wait=e.wait)}}async function K(t){const o=L.WGS84;return await _e(t.spatialReference,o),De(t,o)}function O(t,o){switch(o){case"seconds":return t/60;case"hours":return 60*t;case"days":return 60*t*24;default:return t}}function W(t,o){return o==="decimal-degrees"||o==="points"||o==="unknown"?t:Oe(t,o,"meters")}function ze(t){const{attributes:o,geometry:e,popupTemplate:r,symbol:i}=t.toGraphic().toJSON();return{attributes:o,geometry:e,popupInfo:r,symbol:i}}const Ue=b.ofType(j),Ve=b.ofType(G),X=b.ofType(T),ee=b.ofType(F),te=b.ofType(R),re=b.ofType(A);let l=class extends ce(ye(Ae(ke(Fe(Le))))){constructor(t){super(t),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.checksum=null,this.defaultSymbols=new v,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new X,this.polygonBarriers=new ee,this.polylineBarriers=new te,this.routeInfo=null,this.spatialReference=L.WGS84,this.stops=new re,this.type="route";const o=()=>{this._setStopSymbol(this.stops)};this.addHandles(me((()=>this.stops),"change",o,{sync:!0,onListenerAdd:o}))}writeFeatureCollectionWebmap(t,o,e,r){const i=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((y=>!!y)),c=i.map(((y,f)=>f)),p=r.origin==="web-map"?"featureCollection.layers":"layers";de(p,i,o),o.opacity=this.opacity,o.visibility=this.visible,o.visibleLayers=c}readDirectionLines(t,o){return this._getNetworkFeatures(o,"DirectionLines",(e=>j.fromGraphic(e)))}readDirectionPoints(t,o){return this._getNetworkFeatures(o,"DirectionPoints",(e=>G.fromGraphic(e)))}get fullExtent(){const t=new fe({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:L.WGS84});if(this.routeInfo?.geometry!=null)return this.routeInfo.geometry.extent??t;if(this.stops==null)return t;const o=this.stops.filter((i=>i.geometry!=null));if(o.length<2)return t;const{spatialReference:e}=o.at(0).geometry;if(e==null)return t;const r=o.toArray().map((i=>{const c=i.geometry;return[c.x,c.y]}));return new he({points:r,spatialReference:e}).extent}readMaxScale(t,o){return($(o)?o.layers:o.featureCollection?.layers)?.find((i=>i.layerDefinition.maxScale!=null))?.layerDefinition.maxScale??0}readMinScale(t,o){return($(o)?o.layers:o.featureCollection?.layers)?.find((i=>i.layerDefinition.minScale!=null))?.layerDefinition.minScale??0}readPointBarriers(t,o){return this._getNetworkFeatures(o,"Barriers",(e=>T.fromGraphic(e)))}readPolygonBarriers(t,o){return this._getNetworkFeatures(o,"PolygonBarriers",(e=>F.fromGraphic(e)))}readPolylineBarriers(t,o){return this._getNetworkFeatures(o,"PolylineBarriers",(e=>R.fromGraphic(e)))}readRouteInfo(t,o){return this._getNetworkFeatures(o,"RouteInfo",(e=>E.fromGraphic(e))).at(0)??null}readSpatialReference(t,o){const e=$(o)?o.layers:o.featureCollection?.layers;if(!e?.length)return L.WGS84;const{layerDefinition:r,featureSet:i}=e[0],c=i.features[0],p=c?.geometry?.spatialReference??i.spatialReference??r.spatialReference??r.extent.spatialReference??Q;return L.fromJSON(p)}readStops(t,o){return this._getNetworkFeatures(o,"Stops",(e=>A.fromGraphic(e)),(e=>this._setStopSymbol(e)))}get title(){return this.routeInfo?.name??"Route"}set title(t){this._overrideIfSome("title",t)}get url(){return Y.routeServiceUrl}set url(t){t!=null?this._set("url",we(t,Z.getLogger(this))):this._set("url",Y.routeServiceUrl)}load(t){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},t)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){this.directionLines!=null&&(this.directionLines.removeAll(),this._set("directionLines",null)),this.directionPoints!=null&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),this.routeInfo!=null&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:t,portalItem:o}=this;if(!o)throw new B("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!o.id)throw new B("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(o.type!=="Feature Collection")throw new B("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(!this.routeInfo)throw new B("routelayer:route-unsolved","save() requires a solved route");const{portal:e}=o;await e.signIn(),e.user||await o.reload();const{itemUrl:r,itemControl:i}=o;if(i!=="admin"&&i!=="update")throw new B("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const c={messages:[],origin:"portal-item",portal:e,url:r?be(r):void 0,writtenProperties:[]},p=this.write(void 0,c);return o.extent=await K(t),o.title=this.title,await o.update({data:p}),o}async saveAs(t,o={}){if(await this.load(),this.routeInfo==null)throw new B("routelayer:route-unsolved","saveAs() requires a solved route");const e=ge.from(t).clone();e.extent??=await K(this.fullExtent),e.id=null,e.portal??=Se.getDefault(),e.title??=this.title,e.type="Feature Collection",e.typeKeywords=["Data","Feature Collection",xe.MULTI_LAYER,"Route Layer"];const{portal:r}=e,i={messages:[],origin:"portal-item",portal:r,url:null,writtenProperties:[]};await r.signIn();const c=o?.folder,p=this.write(void 0,i);return await r.user.addItem({item:e,folder:c,data:p}),this.portalItem=e,Re(i),i.portalItem=e,e}async solve(t,o){k(this.stops),k(this.pointBarriers),k(this.polylineBarriers),k(this.polygonBarriers);const e=t?.stops??this.stops,r=t?.pointBarriers??q(this.pointBarriers),i=t?.polylineBarriers??q(this.polylineBarriers),c=t?.polygonBarriers??q(this.polygonBarriers);if(e==null)throw new B("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((Ge(e)||Je(e))&&e.features.length<2||b.isCollection(e)&&e.length<2)throw new B("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(b.isCollection(e))for(const d of e)d.routeName=null;const p=t?.apiKey,{checksum:y,url:f}=this,g=await this._getServiceDescription(f,p,o),w=t?.travelMode??g.defaultTravelMode,n=t?.accumulateAttributes??[];w&&(n.push(w.distanceAttributeName),w.timeAttributeName&&n.push(w.timeAttributeName));const m={accumulateAttributes:n,checksum:y,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:r,polylineBarriers:i,polygonBarriers:c,preserveObjectID:!0,returnBarriers:!!r,returnDirections:!0,returnPolygonBarriers:!!c,returnPolylineBarriers:!!i,returnRoutes:!0,returnStops:!0,stops:e},_=ve.from(t??{});let N;_.set(m);try{N=await Be(f,_,o)}catch(d){throw Ie(d)?d:new B("routelayer:failed-route-request","the routing request failed",{error:d})}const S=this._toRouteLayerSolution(N);return this._isOverridden("title")||(this.title=S.routeInfo.name??"Route"),this._populatePortalFields(S,g,_),S}update(t){const{checksum:o,directionLines:e,directionPoints:r,pointBarriers:i,polygonBarriers:c,polylineBarriers:p,routeInfo:y,stops:f}=t;x(f,this.stops)?We(f,this.stops):this.set({stops:f}),x(i,this.pointBarriers)?Me(i,this.pointBarriers):this.set({pointBarriers:i}),x(p,this.polylineBarriers)?Ee(p,this.polylineBarriers):this.set({polylineBarriers:p}),x(c,this.polygonBarriers)?qe(c,this.polygonBarriers):this.set({polygonBarriers:c}),this.set({checksum:o}),this._set("directionLines",e),this._set("directionPoints",r),this._set("routeInfo",y),y.geometry!=null&&(this.spatialReference=y.geometry.spatialReference)}_getNetworkFeatures(t,o,e,r){const i=$(t)?t.layers:t.featureCollection?.layers,c=i?.find((S=>S.layerDefinition.name===o));if(c==null)return new b;const{layerDefinition:p,popupInfo:y,featureSet:f}=c,g=p.drawingInfo.renderer,{features:w}=f,n=f.spatialReference??p.spatialReference??p.extent.spatialReference??Q,m=g&&$e(g),_=L.fromJSON(n),N=w.map((S=>{const d=Pe.fromJSON(S);d.geometry!=null&&S.geometry!=null&&S.geometry.spatialReference==null&&(d.geometry.spatialReference=_);const h=e(d);return h.symbol??=m?.getSymbol(d)??this._getNetworkSymbol(o),h.popupTemplate??=y&&Ne.fromJSON(y),h}));return r&&N.some((({symbol:S})=>!S))&&r(N),new b(N)}_getNetworkSymbol(t){switch(t){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(t,o,e){if(this._cachedServiceDescription!=null&&this._cachedServiceDescription.url===t)return this._cachedServiceDescription.serviceDescription;const r=await Ce(t,o,e);return this._cachedServiceDescription={serviceDescription:r,url:t},r}_setStopSymbol(t){if(!t||!t.length||!this.defaultSymbols.stops||t.every((({symbol:n})=>!!n)))return;const{first:o,last:e,middle:r,unlocated:i,waypoint:c,break:p}=this.defaultSymbols.stops,y=t.map((({sequence:n})=>n)).filter((n=>n!=null)),f=t.length===y.length;if(!this.routeInfo&&!f||t.length===1)return void t.forEach(((n,m)=>{switch(m){case 0:n.symbol=o;break;case t.length-1:n.symbol=e;break;default:n.symbol=r}}));const g=Math.min(...y),w=Math.max(...y);for(const n of t)n.sequence!==g?n.sequence!==w?this.routeInfo&&n.status!=="ok"&&n.status!=="not-located-on-closest"?n.symbol=i:n.locationType!=="waypoint"?n.locationType!=="break"?n.symbol=r:n.symbol=p:n.symbol=c:n.symbol=e:n.symbol=o}_toRouteLayerSolution(t){const{checksum:o,routeResults:e}=t,r=e[0].stops?.map((n=>A.fromJSON(n.toJSON())));this._setStopSymbol(r);const i=new re(r),c=new ee(t.polygonBarriers?.map((n=>{const m=F.fromJSON(n.toJSON());return m.symbol=this.defaultSymbols.polygonBarriers,m}))),p=new te(t.polylineBarriers?.map((n=>{const m=R.fromJSON(n.toJSON());return m.symbol=this.defaultSymbols.polylineBarriers,m}))),y=new X(t.pointBarriers?.map((n=>{const m=T.fromJSON(n.toJSON());return m.symbol=this.defaultSymbols.pointBarriers,m}))),f=e[0].route?.toJSON(),g=E.fromJSON(f);g.symbol=this.defaultSymbols.routeInfo;const w=new Ve(e[0].directionPoints?.features.map((n=>{const m=G.fromJSON(n.toJSON());return m.symbol=this.defaultSymbols.directionPoints,m})));return{checksum:o,directionLines:new Ue(e[0].directionLines?.features.map((n=>{const m=j.fromJSON(n.toJSON());return m.symbol=this.defaultSymbols.directionLines,m}))),directionPoints:w,pointBarriers:y,polygonBarriers:c,polylineBarriers:p,routeInfo:g,stops:i}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",j.fields,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",G.fields,"DirectionPoints","Direction Points")}_writeNetworkFeatures(t,o,e,r,i,c){if(!t?.length)return null;const p=this.spatialReference.toJSON(),{fullExtent:y,maxScale:f,minScale:g}=this;return{featureSet:{features:t.toArray().map((w=>ze(w))),geometryType:e,spatialReference:p},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:o!=null?o.toJSON():z(e)}},extent:y.toJSON(),fields:r,geometryType:e,hasM:!1,hasZ:!1,maxScale:f,minScale:g,name:i,objectIdField:"ObjectID",spatialReference:p,title:c,type:"Feature Layer",typeIdField:""}}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",T.fields,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",F.fields,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",R.fields,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(this.routeInfo!=null?new b([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",E.fields,"RouteInfo","Route Details")}_writeStops(){const t=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",A.fields,"Stops","Stops");if(t==null)return null;const{stops:o}=this.defaultSymbols,e=o?.first?.toJSON(),r=o?.middle?.toJSON(),i=o?.last?.toJSON();return t.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:r,uniqueValueInfos:[{value:"1",symbol:e,label:"First Stop"},{value:`${this.stops.length}`,symbol:i,label:"Last Stop"}]},t}_populatePortalFields(t,o,e){const r=o.networkDataset?.networkAttributes,i=r?.filter((({usageType:s})=>s==="cost"))??[],c=e.travelMode??o.defaultTravelMode;if(c==null)return void Z.getLogger(this).warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:p,distanceAttributeName:y}=c,f=i.find((({name:s})=>s===p)),g=i.find((({name:s})=>s===y)),w=e.travelMode?.impedanceAttributeName??e.impedanceAttribute??o.impedance,n=f?.units,m=g?.units;if(!n||!m)throw new B("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const _=e.directionsLanguage??o.directionsLanguage,N=e.accumulateAttributes??o.accumulateAttributeNames??[],S=new Set(i.filter((({name:s})=>s===p||s===y||s===w||s!=null&&N.includes(s))).map((({name:s})=>s))),d=s=>{for(const V in s)S.has(V)||delete s[V]};for(const s of t.pointBarriers)s.costs!=null&&(s.addedCost=s.costs[w]??0,d(s.costs));for(const s of t.polygonBarriers)s.costs!=null&&(s.scaleFactor=s.costs[w]??1,d(s.costs));for(const s of t.polylineBarriers)s.costs!=null&&(s.scaleFactor=s.costs[w]??1,d(s.costs));const{routeInfo:h}=t,{findBestSequence:ie,preserveFirstStop:se,preserveLastStop:ne,startTimeIsUTC:ae,timeWindowsAreUTC:le}=e;h.analysisSettings=new je({accumulateAttributes:N,directionsLanguage:_,findBestSequence:ie,preserveFirstStop:se,preserveLastStop:ne,startTimeIsUTC:ae,timeWindowsAreUTC:le,travelMode:c}),h.totalDuration=O(h.totalCosts?.[p]??0,n),h.totalDistance=W(h.totalCosts?.[y]??0,m),h.totalLateDuration=O(h.totalViolations?.[p]??0,n),h.totalWaitDuration=O(h.totalWait?.[p]??0,n),h.totalCosts!=null&&d(h.totalCosts),h.totalViolations!=null&&d(h.totalViolations),h.totalWait!=null&&d(h.totalWait);for(const s of t.stops)s.serviceCosts!=null&&(s.serviceDuration=O(s.serviceCosts[p]??0,n),s.serviceDistance=W(s.serviceCosts[y]??0,m),d(s.serviceCosts)),s.cumulativeCosts!=null&&(s.cumulativeDuration=O(s.cumulativeCosts[p]??0,n),s.cumulativeDistance=W(s.cumulativeCosts[y]??0,m),d(s.cumulativeCosts)),s.violations!=null&&(s.lateDuration=O(s.violations[p]??0,n),d(s.violations)),s.wait!=null&&(s.waitDuration=O(s.wait[p]??0,n),d(s.wait))}};a([u({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],l.prototype,"_featureCollection",void 0),a([Te(["web-map","portal-item"],"_featureCollection")],l.prototype,"writeFeatureCollectionWebmap",null),a([u({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],l.prototype,"_type",void 0),a([u({type:String})],l.prototype,"checksum",void 0),a([u({nonNullable:!0,type:v})],l.prototype,"defaultSymbols",void 0),a([u({readOnly:!0})],l.prototype,"directionLines",void 0),a([I(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],l.prototype,"readDirectionLines",null),a([u({readOnly:!0})],l.prototype,"directionPoints",void 0),a([I(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],l.prototype,"readDirectionPoints",null),a([u({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],l.prototype,"featureCollectionType",void 0),a([u({readOnly:!0})],l.prototype,"fullExtent",null),a([u({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],l.prototype,"legendEnabled",void 0),a([u({type:["show","hide"]})],l.prototype,"listMode",void 0),a([u({type:Number,nonNullable:!0,json:{write:!1}})],l.prototype,"maxScale",void 0),a([I(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],l.prototype,"readMaxScale",null),a([u({type:Number,nonNullable:!0,json:{write:!1}})],l.prototype,"minScale",void 0),a([I(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],l.prototype,"readMinScale",null),a([u({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],l.prototype,"operationalLayerType",void 0),a([u({nonNullable:!0,type:b.ofType(T)})],l.prototype,"pointBarriers",void 0),a([I(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],l.prototype,"readPointBarriers",null),a([u({nonNullable:!0,type:b.ofType(F)})],l.prototype,"polygonBarriers",void 0),a([I(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],l.prototype,"readPolygonBarriers",null),a([u({nonNullable:!0,type:b.ofType(R)})],l.prototype,"polylineBarriers",void 0),a([I(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],l.prototype,"readPolylineBarriers",null),a([u({readOnly:!0})],l.prototype,"routeInfo",void 0),a([I(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],l.prototype,"readRouteInfo",null),a([u({type:L})],l.prototype,"spatialReference",void 0),a([I(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],l.prototype,"readSpatialReference",null),a([u({nonNullable:!0,type:b.ofType(A)})],l.prototype,"stops",void 0),a([I(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],l.prototype,"readStops",null),a([u()],l.prototype,"title",null),a([u({readOnly:!0,json:{read:!1}})],l.prototype,"type",void 0),a([u()],l.prototype,"url",null),l=a([U("esri.layers.RouteLayer")],l);const Tt=l;export{Tt as default};
