const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/streamLayerUtils-eDyQLiCU.js","assets/utils-B2oHj6J2.js","assets/index-CIvzYPzY.js","assets/index-DsSYJ8N7.css","assets/originUtils-DVWEJ9dp.js","assets/jsonContext-eg-p20_C.js","assets/portalItemUtils-CxyRNC2P.js","assets/saveUtils-BwSix21_.js","assets/createConnection-CnAhEnx3.js","assets/query-DxVFmZ89.js","assets/pbfQueryUtils-DofJYUdj.js","assets/pbf-CSg8Q6ez.js","assets/memoryEstimations-OKQODrhX.js","assets/OptimizedFeature-DsswuzeX.js","assets/OptimizedFeatureSet-BR8EEvDc.js","assets/queryZScale-CgDKuErc.js"])))=>i.map(i=>d[i]);
import{c1 as A,n as t,u as r,v as x,eQ as F,eR as P,ce as E,eS as O,ac as $,f4 as k,_ as v,s as l,a3 as D,hm as g,i as U,ec as y,fZ as C,c0 as N,a4 as L,bU as V,cd as G,f3 as J,cO as M,c9 as w,A as z,by as b,aG as q}from"./index-CIvzYPzY.js";import{S as W}from"./MultiOriginJSONSupport-vc1qAaCn.js";import{l as Q}from"./ArcGISService-D-kphmJZ.js";import{e as H}from"./CustomParametersMixin-Bv18qT7z.js";import{a as Z}from"./DisplayFilteredLayer-DaffTb1V.js";import{c as B}from"./FeatureEffectLayer-CUUmfDSw.js";import{d as K}from"./FeatureReductionLayer-qX3CicGK.js";import{b as X,p as Y,d as ee,v as te,j as ie,l as re,s as oe,y as se}from"./OperationalLayer-BxJNOqBe.js";import{j as ne}from"./PortalLayer-2igyZmoT.js";import{f as ae}from"./RefreshableLayer-CS7mAVFh.js";import{c as pe}from"./TemporalLayer-CJCcOFra.js";import{e as le}from"./TrackableLayer-Dj9WiJIC.js";import{t as de,l as me,A as ce}from"./labelingInfo-BKuV8eQG.js";import{s as ue}from"./fieldProperties-BNTBxF_s.js";import{_ as he}from"./streamLayerUtils-CKwt2uXH.js";import{o as ye}from"./jsonUtils-BYOZtacJ.js";import{t as fe}from"./styleUtils-MkQ85Qqm.js";import{u as ve,m as ge}from"./typeUtils-o3fpvopl.js";import{p as we}from"./popupUtils-DajIpfDa.js";import{A as c}from"./interfaces-CL2NbQte.js";import"./scaleUtils-5wGfXRXs.js";import"./displayFilterUtils-DgUuq60z.js";import"./FeatureEffect-CE_U3OYt.js";import"./FeatureFilter-CxnQ2Kbx.js";import"./FeatureReductionSelection-BAu9wS5d.js";import"./SimpleRenderer-CfoG_VYP.js";import"./commonProperties-C90DHbM8.js";import"./colorRamps--pvRdS00.js";import"./ColorStop-BLS-yQlk.js";import"./visualVariableUtils-9FwH9fcf.js";import"./jsonUtils-B4k9BhPC.js";import"./defaults3D-Cq9zCdkJ.js";import"./defaults-2Eoo-Em5.js";import"./defaultsJSON-GKolV7NZ.js";import"./portalItemUtils-CxyRNC2P.js";import"./TimeInfo-COO7gs96.js";import"./UniqueValueRenderer-Dt4x8KbJ.js";import"./diffUtils-DlgBFjqf.js";import"./RendererLegendOptions-BkodElHl.js";import"./styleUtils-DtlEo6iZ.js";import"./NormalizationBinParametersMixin-BtYmt75J.js";import"./labelUtils-Bx8_cFri.js";import"./FieldsIndex-B4Sm2LQK.js";import"./UnknownTimeZone-Bd_0BL1h.js";import"./ClassBreaksRenderer-Dgr7UkBY.js";import"./LRUCache--7okbBjw.js";import"./MemCache-CYsUaMUi.js";import"./DictionaryScriptEvaluator-CGFhPmee.js";import"./ArcadeExpression-DybLNf6A.js";import"./TimeOnly-BuL6ME6Y.js";import"./enum-CzMaXjj9.js";import"./utils-Dytr9oL9.js";import"./defaultCIMValues-B0_T2GCo.js";import"./enums-Da5QEGm1.js";import"./heatmapUtils-FMz0qSJp.js";import"./vec42-CYPJBKnA.js";import"./vec4f64-DPb6J-GU.js";var f,d;let a=(d=class extends A{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new f({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}},f=d,d);t([r({type:Number,json:{write:!0}})],a.prototype,"age",void 0),t([r({type:Number,json:{write:!0}})],a.prototype,"ageReceived",void 0),t([r({type:Number,json:{write:!0}})],a.prototype,"displayCount",void 0),t([r({type:Number,json:{write:!0}})],a.prototype,"maxObservations",void 0),a=f=t([x("esri.layers.support.PurgeOptions")],a);const S=ue();function I(e,o){return new l("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${o}`,{layer:e})}let i=class extends Z(K(B(F(pe(le(P(ae(Q(X(ne(W(H(E.ClonableMixin(O)))))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.outFields=["*"],this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new a,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=$.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null,this._debouncedSaveOperations=k((async(o,s,n)=>{const{save:p,saveAs:u}=await v(()=>import("./streamLayerUtils-eDyQLiCU.js"),__vite__mapDeps([0,1,2,3,4,5,6,7]));switch(o){case c.SAVE:return p(this,s);case c.SAVE_AS:return u(this,n,s)}}))}normalizeCtorArgs(e,o){return typeof e=="string"?{url:e,...o}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new l("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const o=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(D).then((()=>this._fetchService(o)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const o=this._normalizeFeatureReduction(e);this._set("featureReduction",o)}set renderer(e){g(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,o,s){o=o.layerDefinition||o;const n=o.drawingInfo?.renderer;if(n){const p=ye(n,o,s)||void 0;return p||U.getLogger(this).error("Failed to create renderer",{rendererDefinition:o.drawingInfo.renderer,layer:this,context:s}),p}return de(o,s)}async connect(e){const[{createConnection:o}]=await Promise.all([v(()=>import("./createConnection-CnAhEnx3.js"),__vite__mapDeps([8,2,3,9,10,11,12,13,14,15])),this.load()]),s=this.geometryType?y.toJSON(this.geometryType):null,{customParameters:n=null,definitionExpression:p=null,geometryDefinition:u=null,maxReconnectionAttempts:R=0,maxReconnectionInterval:j=20,spatialReference:T=this.spatialReference}=e||this.createConnectionParameters(),m=o(this.parsedUrl,this.spatialReference,T,s,p,u,R,j,n??void 0),_=C([this.on("send-message-to-socket",(h=>m.sendMessageToSocket(h))),this.on("send-message-to-client",(h=>m.sendMessageToClient(h)))]);return m.once("destroy",_.remove),m}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return we(this,e)}createQuery(){const e=new N;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,o){if(!this.fields)return null;let s=null;return this.fields.some((n=>(n.name===e&&(s=n.domain),!!s))),s}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}async save(e){return this._debouncedSaveOperations(c.SAVE,e)}async saveAs(e,o){return this._debouncedSaveOperations(c.SAVE_AS,o,e)}write(e,o){const s=o?.messages;return this.webSocketUrl?(s?.push(I(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,o):(s?.push(I(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:o}=await L(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=o}}else{if(!this.timeInfo?.trackIdField)throw new l("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const o=this.fields.find((s=>s.type==="oid"))?.name;if(!o)throw new l("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=o}if(!this.fields)throw new l("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some((o=>o.name===this.objectIdField))||this.fields.push(new V({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new l("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}),g(this.renderer,this.fieldsIndex),G(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField=he),fe(this,{origin:"service"})}};t([r({type:String})],i.prototype,"copyright",void 0),t([r({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),t([r({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),t([r({type:String})],i.prototype,"displayField",void 0),t([r({type:J})],i.prototype,"elevationInfo",void 0),t([r({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],i.prototype,"featureReduction",null),t([r(S.fields)],i.prototype,"fields",void 0),t([r(S.fieldsIndex)],i.prototype,"fieldsIndex",void 0),t([r({type:M,json:{name:"layerDefinition.definitionGeometry",write:!0}})],i.prototype,"geometryDefinition",void 0),t([r({type:y.apiValues,json:{read:{reader:y.read}}})],i.prototype,"geometryType",void 0),t([r(Y)],i.prototype,"labelsVisible",void 0),t([r({type:[ce],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:me},write:!0}})],i.prototype,"labelingInfo",void 0),t([r(ee)],i.prototype,"legendEnabled",void 0),t([r({type:["show","hide"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],i.prototype,"listMode",void 0),t([r({type:w})],i.prototype,"maxReconnectionAttempts",void 0),t([r({type:w})],i.prototype,"maxReconnectionInterval",void 0),t([r(te)],i.prototype,"maxScale",void 0),t([r(ie)],i.prototype,"minScale",void 0),t([r({type:String})],i.prototype,"objectIdField",void 0),t([r({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],i.prototype,"operationalLayerType",void 0),t([r({readOnly:!0})],i.prototype,"outFields",void 0),t([r(re)],i.prototype,"popupEnabled",void 0),t([r({type:z,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),t([r({type:a})],i.prototype,"purgeOptions",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"refreshInterval",void 0),t([r({types:ge,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:ve,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],i.prototype,"renderer",null),t([b("service","renderer",["drawingInfo.renderer","defaultSymbol"]),b("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],i.prototype,"readRenderer",null),t([r((()=>{const e=q(oe);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],i.prototype,"screenSizePerspectiveEnabled",void 0),t([r()],i.prototype,"sourceJSON",void 0),t([r({type:$,json:{origins:{service:{read:{source:"spatialReference"}}}}})],i.prototype,"spatialReference",void 0),t([r({json:{read:!1}})],i.prototype,"type",void 0),t([r(se)],i.prototype,"url",void 0),t([r({type:Number})],i.prototype,"updateInterval",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"useViewTime",void 0),t([r({type:String})],i.prototype,"webSocketUrl",void 0),i=t([x("esri.layers.StreamLayer")],i);const xt=i;export{xt as default};
