const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/FeatureLayer-BVtLfjoO.js","assets/index-CaoLwbR1.js","assets/index-UDJfKx5H.css","assets/MultiOriginJSONSupport-BAVlqMez.js","assets/FeatureLayerBase-BiwdncYp.js","assets/OperationalLayer-dtYVOmPN.js","assets/labelingInfo-CBIgwnLU.js","assets/SimpleRenderer-DJsS1e5G.js","assets/commonProperties-BpvfLt2f.js","assets/colorRamps-BgxfuDFH.js","assets/ColorStop-CWqYagNl.js","assets/visualVariableUtils-B57ANmY6.js","assets/jsonUtils-C1IvpZNN.js","assets/defaults3D-ivya3xoE.js","assets/defaults-BAlE9t0U.js","assets/defaultsJSON-GKolV7NZ.js","assets/UniqueValueRenderer-Cl341lK8.js","assets/diffUtils-qt8uR2Gq.js","assets/RendererLegendOptions-nTkh6EFE.js","assets/styleUtils-Cz1vH-LF.js","assets/NormalizationBinParametersMixin-I0lm4__P.js","assets/labelUtils-CWfoqZRT.js","assets/LayerFloorInfo-C90jqDBC.js","assets/Relationship-D-StIRGH.js","assets/serviceCapabilitiesUtils-CNG_8CT0.js","assets/infoFor3D-VMSlSy0z.js","assets/portalItemUtils-BGiFrKwk.js","assets/editsZScale-Ugxly4lw.js","assets/queryZScale-J59eJujY.js","assets/APIKeyMixin-DxCsFFgo.js","assets/ArcGISService-DXCFIWmp.js","assets/CustomParametersMixin-BOMzQIEt.js","assets/DisplayFilteredLayer-BpQxn8pe.js","assets/scaleUtils-CsWuzU5Z.js","assets/displayFilterUtils-Cb9Q3jm9.js","assets/EditBusLayer-BW0l4gae.js","assets/FeatureEffectLayer-CFWlL1ug.js","assets/FeatureEffect-CxICV0it.js","assets/FeatureFilter-Cvzej7Xt.js","assets/FeatureReductionLayer-BRmAPwS2.js","assets/FeatureReductionSelection-BRL0D4WO.js","assets/jsonUtils-KsdYykgc.js","assets/typeUtils-Cvpmo3c3.js","assets/ClassBreaksRenderer-BFuqZLUW.js","assets/LRUCache--7okbBjw.js","assets/MemCache-CYsUaMUi.js","assets/DictionaryScriptEvaluator-D4rTqbRM.js","assets/FieldsIndex-BiR-AzOu.js","assets/UnknownTimeZone-7tPwvKCX.js","assets/ArcadeExpression-BLhVUkj0.js","assets/TimeOnly-CQUth33y.js","assets/enum-D0LZ-dqd.js","assets/utils-BLMWe3SZ.js","assets/defaultCIMValues-B0_T2GCo.js","assets/enums-Da5QEGm1.js","assets/heatmapUtils-D1vgNC_u.js","assets/vec42-CF-1ZD7A.js","assets/vec4f64-DPb6J-GU.js","assets/OrderedLayer-vZYcC173.js","assets/OrderByInfo-yCjIoSBh.js","assets/PortalLayer-B2Bto4YX.js","assets/RefreshableLayer-DwXOj26-.js","assets/TemporalLayer-CCXX9TBo.js","assets/TimeInfo-B5bfy7wZ.js","assets/TrackableLayer-w06pmbIA.js","assets/FeatureTemplate-BvEL2WCK.js","assets/FeatureType-V5ezYApE.js","assets/fieldProperties-DCP1Zlrw.js","assets/TitleCreator-E168j-ki.js","assets/versionUtils-DRwsPTJv.js","assets/styleUtils-3trbHmg-.js","assets/popupUtils-C3mgajjP.js","assets/interfaces-CL2NbQte.js"])))=>i.map(i=>d[i]);
import{dm as R,s as c,n as d,u as p,v as w,cv as k,cW as v,i as a,hk as L,a0 as F,a7 as N,aR as O,_ as x,c0 as E,af as P}from"./index-CaoLwbR1.js";import{c as b}from"./query-BFcjVD8z.js";import"./pbfQueryUtils-1pzFlPHP.js";import"./pbf-CHwjgNMf.js";import"./memoryEstimations-B2IbCRpd.js";import"./OptimizedFeature-CpDeLxSu.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-J59eJujY.js";let y=class extends R.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new c("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};d([p({readOnly:!0})],y.prototype,"connectionError",null),y=d([w("esri.layers.support.StreamConnection")],y);var g;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(g||(g={}));let f=class extends y{constructor(t){super({}),this._outstandingMessages=[],this.errorString=null;const{geometryType:r,spatialReference:s,sourceSpatialReference:o}=t;this._config=t,this._featureZScaler=k(r,o,s),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),this._websocket!=null&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(this._websocket==null)return"disconnected";switch(this._websocket.readyState){case g.CONNECTING:case g.OPEN:return"connected";case g.CLOSING:case g.CLOSED:return"disconnected"}}sendMessageToSocket(t){this._websocket!=null?this._websocket.send(JSON.stringify(t)):this._outstandingMessages.push(t)}sendMessageToClient(t){this._onMessage(t)}updateCustomParameters(t){this._config.customParameters=t,this._websocket!=null&&this._websocket.close()}async _tryCreateWebSocket(t=this._config.source.path,r=1e3,s=0){try{if(this.destroyed)return;const o=v(t,this._config.customParameters??{});this._websocket=await this._createWebSocket(o),this.notifyChange("connectionStatus")}catch(o){const n=r/1e3;return this._config.maxReconnectionAttempts&&s>=this._config.maxReconnectionAttempts?(a.getLogger(this).error(new c("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(a.getLogger(this).error(new c("websocket-connection",`Failed to connect. Attempting to reconnect in ${n}s`,o)),await L(r),this._tryCreateWebSocket(t,Math.min(1.5*r,1e3*this._config.maxReconnectionInterval),s+1))}}_setWebSocketJSONParseHandler(t){t.onmessage=r=>{try{const s=JSON.parse(r.data);this._onMessage(s)}catch(s){return void a.getLogger(this).error(new c("websocket-connection","Failed to parse message, invalid JSON",{error:s}))}}}_createWebSocket(t){return new Promise(((r,s)=>{const o=new WebSocket(t);o.onopen=()=>{if(o.onopen=null,this.destroyed)return o.onclose=null,void o.close();o.onclose=n=>this._onClose(n),o.onerror=n=>this._onError(n),this._setWebSocketJSONParseHandler(o),r(o)},o.onclose=n=>{o.onopen=o.onclose=null,s(n)}}))}async _handshake(t=1e4){const r=this._websocket;if(r==null)return;const s=F(),o=r.onmessage,{filter:n,outFields:u,spatialReference:l}=this._config;return s.timeout(t),r.onmessage=h=>{let i=null;try{i=JSON.parse(h.data)}catch{}i&&typeof i=="object"||(a.getLogger(this).error(new c("websocket-connection","Protocol violation. Handshake failed - malformed message",h.data)),s.reject(),this.destroy()),i.spatialReference?.wkid!==l?.wkid&&(a.getLogger(this).error(new c("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,h.data)),s.reject(),this.destroy()),i.format!=="json"&&(a.getLogger(this).error(new c("websocket-connection","Protocol violation. Handshake failed - format is not set",h.data)),s.reject(),this.destroy()),n&&i.filter!==n&&a.getLogger(this).error(new c("websocket-connection","Tried to set filter, but server doesn't support it")),u&&i.outFields!==u&&a.getLogger(this).error(new c("websocket-connection","Tried to set outFields, but server doesn't support it")),r.onmessage=o;for(const m of this._outstandingMessages)r.send(JSON.stringify(m));this._outstandingMessages=[],s.resolve()},r.send(JSON.stringify({filter:n,outFields:u,format:"json",spatialReference:{wkid:l.wkid}})),s.promise}_onMessage(t){if(this.onMessage(t),"type"in t)switch(t.type){case"features":case"featureResult":for(const r of t.features)this._featureZScaler!=null&&this._featureZScaler(r.geometry),this.onFeature(r)}}_onError(t){const r="Encountered an error over WebSocket connection";this._set("errorString",r),a.getLogger(this).error("websocket-connection",r)}_onClose(t){this._websocket=null,this.notifyChange("connectionStatus"),t.code!==1e3&&a.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${t.code}`),this.destroyed||this._open()}};d([p()],f.prototype,"connectionStatus",null),d([p()],f.prototype,"errorString",void 0),f=d([w("esri.layers.graphics.sources.connections.WebSocketConnection")],f);const W=1e4,M={maxQueryDepth:5,maxRecordCountFactor:3};let S=class extends f{constructor(e){super({...M,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||a.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:s}=this._config;this.destroyed||this._setFilter(r,s)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),this._featureZScaler!=null&&this._featureZScaler(t.geometry)}catch(r){return void a.getLogger(this).error(new c("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=N(e.path,{query:t,responseType:"json"}),s=(await r).data;return this._serviceDefinition=s,s}_fetchWebSocketUrl(e,t){const r=e[0],{urls:s,token:o}=r,n=this._inferWebSocketBaseUrl(s);return v(`${n}/subscribe`,{outSR:""+t.wkid,token:o})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return a.getLogger(this).error(new c("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(r==null||e==null&&t==null)return;const s=JSON.stringify({filter:this._serializeFilter(e,t)});let o=!1;const n=F(),u=()=>{o||(this.destroyed||this._websocket!==r||a.getLogger(this).error(new c("geoevent-connection","Server timed out when setting filter")),n.reject())},l=h=>{const i=JSON.parse(h.data);i.filter&&(i.error&&(a.getLogger(this).error(new c("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),o=!0,n.resolve())};return r.onmessage=l,r.send(s),setTimeout(u,W),n.promise}_serializeFilter(e,t){const r={};if(e==null&&t==null)return r;if(e?.geometry)try{const s=O(e.geometry);if(s.type!=="extent")throw new c("geoevent-connection",`Expected extent but found type ${s.type}`);r.geometry=JSON.stringify(s.shiftCentralMeridian())}catch(s){a.getLogger(this).error(new c("geoevent-connection","Encountered an error when setting connection geometryDefinition",s))}return e?.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),t!=null&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],s=this._relatedFeatures.get(r);if(!s)return a.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:n}=s;for(const u in o)e.attributes[u]=o[u];return n&&(e.geometry=n),e.geometry||e.centroid||a.getLogger(this).error(new c("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const n of o.features)this.onFeature(this._enrich(n))}catch(e){a.getLogger(this).error(new c("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new(await x(async()=>{const{default:C}=await import("./FeatureLayer-BVtLfjoO.js");return{default:C}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72]))).default({url:e}),{capabilities:r}=await t.load(),s=r.query.supportsMaxRecordCountFactor,o=r.query.supportsPagination,n=r.query.supportsCentroid,u=this._config.maxRecordCountFactor,l=t.capabilities.query.maxRecordCount,h=s?l*u:l,i=new E;if(i.outFields=this._config.outFields??["*"],i.where=this._config.filter?.where??"1=1",i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=P.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),s&&(i.maxRecordCountFactor=u),o)return i.num=h,t.destroy(),this._queryPages(e,i);const m=await b(e,i,this._config.sourceSpatialReference);return t.destroy(),m.data}async _queryPages(e,t,r=[],s=0){t.start=t.num!=null?s*t.num:null;const{data:o}=await b(e,t,this._config.sourceSpatialReference);return o.exceededTransferLimit&&s<(this._config.maxQueryDepth??0)?(o.features.forEach((n=>r.push(n))),this._queryPages(e,t,r,s+1)):(r.forEach((n=>o.features.push(n))),o)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const o of r){const n=o.attributes[s];t.set(n,o)}this._relatedFeatures=t}};S=d([w("esri.layers.graphics.sources.connections.GeoEventConnection")],S);let _=class extends y{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._featureZScaler=k(t,s,r)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};d([p()],_.prototype,"connectionStatus",void 0),d([p()],_.prototype,"errorString",void 0),_=d([w("esri.layers.support.ClientSideConnection")],_);function T(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t),e!=null&&(r.where=e),r}function U(e,t,r,s,o,n,u,l,h){const i={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:s,filter:T(o,n),maxReconnectionAttempts:u,maxReconnectionInterval:l,customParameters:h};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new f(i):new S(i):new _(i)}export{U as createConnection};
