import{n as r,u as s,v as n,c as l,l as d,i as u,w as c,f as m,j as y}from"./index-DVueJeH0.js";import{r as f}from"./BitmapContainer-OOWrnvX4.js";import{S as _,u as x}from"./LayerView-CYGl7ByA.js";import{O as H}from"./GraphicsView2D-DTPh4TWQ.js";import{a as w}from"./HighlightGraphicContainer-CO-ErqhM.js";import{M as v}from"./ExportStrategy--up9xp6V.js";import{y as I}from"./ExportImageParameters-Cp75F4Fo.js";import{i as $}from"./timeSupport-DaIAuLTj.js";import{i as P}from"./RefreshableLayerView-DD46F65M.js";import{P as V,i as E}from"./MapServiceLayerViewHelper-Ce_jcVhG.js";import{r as G}from"./drapedUtils-B3U4xbm-.js";import"./WGLContainer-BrR9EIkL.js";import"./Utils-CYafm8A-.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-D8nkYGcX.js";import"./memoryEstimations-BcvSY_3G.js";import"./vec3f32-WCVSSNPR.js";import"./Container-_Eyp3nvG.js";import"./StyleDefinition-H2dD46QT.js";import"./enums-Da5QEGm1.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-Cp23-y9J.js";import"./OptimizedFeature-B6tCc0Fw.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./BitmapTechnique-B86md15f.js";import"./GraphShaderModule-DYjNYAaX.js";import"./FramebufferObject-5qFhVzFc.js";import"./ShaderBuilder-7fvZQXyF.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-pk2C5RYg.js";import"./bitmapUtils-B0k794jB.js";import"./layerViewUtils-95BS84K2.js";import"./FieldsIndex-CK4mbtzl.js";import"./UnknownTimeZone-Dg1lf0_a.js";import"./UpdateTracking2D-CRs0gtig.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-D4IK7G57.js";import"./utils-0FipLf9Z.js";import"./defaultCIMValues-B0_T2GCo.js";import"./rasterizingUtils-LfP-dpB5.js";import"./floatRGBA-BMDCsb6n.js";import"./Rect-CUzevAry.js";import"./defaults-BcIFANsl.js";import"./defaultsJSON-GKolV7NZ.js";import"./OverrideHelper-JZlY737d.js";import"./colorUtils-BoovcAoo.js";import"./vec42-cDE3-gTJ.js";import"./vec4f64-DPb6J-GU.js";import"./ArcadeExpression-DcMx8yOp.js";import"./TimeOnly-CFDlcqhZ.js";import"./enum-DIZxwjYA.js";import"./quantizationUtils-fpzdciyW.js";import"./AttributeStore-nEZcvrlu.js";import"./labelUtils-BAG8RDf0.js";import"./diffUtils-S_b-_C0w.js";import"./constants-BFLErLYb.js";import"./queryUtils-DJECM9UY.js";import"./json-Wa8cmqdu.js";import"./timeSupport-HZIvjVVx.js";import"./FeatureCommandQueue-eyyqy0tN.js";import"./utils-BCrcOQ2i.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-KoGz60Nx.js";import"./normalizeUtilsSync-B8_BUcZF.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-CActU7Si.js";import"./AGraphicContainer-BCEzA_z4.js";import"./TechniqueInstance-D_vJwvBZ.js";import"./TileContainer-Bl4joD2c.js";import"./scaleUtils-UsOzZw4s.js";import"./floorFilterUtils-n6UOt7ty.js";import"./sublayerUtils-CYmluevV.js";import"./popupUtils-D9UFGqNu.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new I({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return r([s()],i.prototype,"exportImageParameters",void 0),r([s({readOnly:!0})],i.prototype,"floors",null),r([s({readOnly:!0})],i.prototype,"exportImageVersion",null),r([s()],i.prototype,"layer",void 0),r([s()],i.prototype,"suspended",void 0),r([s({readOnly:!0})],i.prototype,"timeExtent",null),i=r([n("esri.views.layers.MapImageLayerView")],i),i};let p=class extends U(P(_(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch((e=>{d(e)||u.getLogger(this).error(e)})),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,o=e>=10.3,g=e>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(a,h)=>G(a,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:a,property:h})=>this._highlightView.graphicUpdateHandler({graphic:a,property:h}),layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:o,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(c((()=>this.exportImageVersion),(()=>this.requestUpdate()))),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,o){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,i,e,o){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t,i){const e=E(t);if(e.length===0)return m();const o=i?.name??y;return this._addHighlightGraphics(e,o),m((()=>!this.destroyed&&this._removeHighlightGraphics(e,o)))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map((e=>e.uid)),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map((e=>e.uid)),i)}};r([s()],p.prototype,"strategy",void 0),r([s()],p.prototype,"updating",void 0),p=r([n("esri.views.2d.layers.MapImageLayerView2D")],p);const Kt=p;export{Kt as default};
